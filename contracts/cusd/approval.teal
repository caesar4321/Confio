#pragma version 8
intcblock 0 1 4 2 1000000
bytecblock 0x637573645f61737365745f6964 0x 0x61646d696e 0x69735f706175736564 0x726573657276655f61646472657373 0x757364635f61737365745f6964 0x637573645f63697263756c6174696e675f737570706c79 0x69735f66726f7a656e 0x746f74616c5f757364635f6c6f636b6564 0x7462696c6c735f6261636b65645f737570706c79 0x636f6c6c61746572616c5f726174696f 0x3a 0x746f74616c5f6d696e746564 0x746f74616c5f6275726e6564 0x151f7c75 0x69735f7661756c74 0x00
txna ApplicationArgs 0
pushbytes 0x4c5c61ba // "create()void"
==
bnz main_l50
txna ApplicationArgs 0
pushbytes 0x990af164 // "setup_assets(uint64,uint64)void"
==
bnz main_l49
txna ApplicationArgs 0
pushbytes 0x0178f94b // "pause()void"
==
bnz main_l48
txna ApplicationArgs 0
pushbytes 0x1b529de8 // "unpause()void"
==
bnz main_l47
txna ApplicationArgs 0
pushbytes 0x30c6d58a // "opt_in()void"
==
bnz main_l46
txna ApplicationArgs 0
pushbytes 0xfa1a6553 // "add_vault(address)void"
==
bnz main_l45
txna ApplicationArgs 0
pushbytes 0x8c1469e0 // "remove_vault(address)void"
==
bnz main_l44
txna ApplicationArgs 0
pushbytes 0x8153e58f // "freeze_address(address)void"
==
bnz main_l43
txna ApplicationArgs 0
pushbytes 0x6bd40555 // "unfreeze_address(address)void"
==
bnz main_l42
txna ApplicationArgs 0
pushbytes 0x5012fea2 // "mint_admin(uint64,address)void"
==
bnz main_l41
txna ApplicationArgs 0
pushbytes 0xf461c019 // "burn_admin(uint64)void"
==
bnz main_l40
txna ApplicationArgs 0
pushbytes 0x4266b1a6 // "mint_with_collateral()void"
==
bnz main_l39
txna ApplicationArgs 0
pushbytes 0x5ae1c528 // "burn_for_collateral()void"
==
bnz main_l38
txna ApplicationArgs 0
pushbytes 0x4fea9c05 // "transfer_cusd(axfer,address)void"
==
bnz main_l37
txna ApplicationArgs 0
pushbytes 0x4a165ee7 // "update_admin(address)void"
==
bnz main_l36
txna ApplicationArgs 0
pushbytes 0xaec80f9b // "update_collateral_ratio(uint64)void"
==
bnz main_l35
txna ApplicationArgs 0
pushbytes 0x253bf820 // "refresh_reserve()void"
==
bnz main_l34
txna ApplicationArgs 0
pushbytes 0x93583e8b // "withdraw_usdc(uint64,address)void"
==
bnz main_l33
txna ApplicationArgs 0
pushbytes 0xe67daf51 // "get_stats()(uint64,uint64)"
==
bnz main_l32
txna ApplicationArgs 0
pushbytes 0x3b188e0a // "get_reserves()(uint64,uint64,uint64,uint64,uint64)"
==
bnz main_l31
txna ApplicationArgs 0
pushbytes 0xf329cd98 // "verify_backing()(bool,uint64)"
==
bnz main_l30
txna ApplicationArgs 0
pushbytes 0xc3f597cc // "is_frozen(address)bool"
==
bnz main_l29
txna ApplicationArgs 0
pushbytes 0x4ed50852 // "is_vault(address)bool"
==
bnz main_l28
txna ApplicationArgs 0
pushbytes 0xa0e81872 // "update()void"
==
bnz main_l27
txna ApplicationArgs 0
pushbytes 0x24378d3c // "delete()void"
==
bnz main_l26
err
main_l26:
txn OnCompletion
pushint 5 // DeleteApplication
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub deletecaster_49
intc_1 // 1
return
main_l27:
txn OnCompletion
intc_2 // UpdateApplication
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub updatecaster_48
intc_1 // 1
return
main_l28:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub isvaultcaster_47
intc_1 // 1
return
main_l29:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub isfrozencaster_46
intc_1 // 1
return
main_l30:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub verifybackingcaster_45
intc_1 // 1
return
main_l31:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub getreservescaster_44
intc_1 // 1
return
main_l32:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub getstatscaster_43
intc_1 // 1
return
main_l33:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub withdrawusdccaster_42
intc_1 // 1
return
main_l34:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub refreshreservecaster_41
intc_1 // 1
return
main_l35:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub updatecollateralratiocaster_40
intc_1 // 1
return
main_l36:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub updateadmincaster_39
intc_1 // 1
return
main_l37:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub transfercusdcaster_38
intc_1 // 1
return
main_l38:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub burnforcollateralcaster_37
intc_1 // 1
return
main_l39:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub mintwithcollateralcaster_36
intc_1 // 1
return
main_l40:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub burnadmincaster_35
intc_1 // 1
return
main_l41:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub mintadmincaster_34
intc_1 // 1
return
main_l42:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub unfreezeaddresscaster_33
intc_1 // 1
return
main_l43:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub freezeaddresscaster_32
intc_1 // 1
return
main_l44:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub removevaultcaster_31
intc_1 // 1
return
main_l45:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub addvaultcaster_30
intc_1 // 1
return
main_l46:
txn OnCompletion
intc_1 // OptIn
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub optincaster_29
intc_1 // 1
return
main_l47:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub unpausecaster_28
intc_1 // 1
return
main_l48:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub pausecaster_27
intc_1 // 1
return
main_l49:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub setupassetscaster_26
intc_1 // 1
return
main_l50:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
==
&&
assert
callsub createcaster_25
intc_1 // 1
return

// create
create_0:
proto 0 0
txn RekeyTo
global ZeroAddress
==
assert
bytec_2 // "admin"
txn Sender
app_global_put
bytec_3 // "is_paused"
intc_0 // 0
app_global_put
bytec 10 // "collateral_ratio"
intc 4 // 1000000
app_global_put
intc_1 // 1
return

// setup_assets
setupassets_1:
proto 2 0
txn Sender
bytec_2 // "admin"
app_global_get
==
assert
txn RekeyTo
global ZeroAddress
==
assert
bytec_0 // "cusd_asset_id"
app_global_get
intc_0 // 0
==
assert
bytec 5 // "usdc_asset_id"
app_global_get
intc_0 // 0
==
assert
global GroupSize
intc_3 // 2
==
assert
txn GroupIndex
intc_1 // 1
==
assert
gtxn 0 TypeEnum
intc_1 // pay
==
assert
gtxn 0 Receiver
global CurrentApplicationAddress
==
assert
gtxn 0 Amount
pushint 600000 // 600000
>=
assert
gtxn 0 RekeyTo
global ZeroAddress
==
assert
gtxn 0 CloseRemainderTo
global ZeroAddress
==
assert
txn Fee
global MinTxnFee
pushint 3 // 3
*
>=
assert
frame_dig -2
frame_dig -1
!=
assert
bytec_0 // "cusd_asset_id"
frame_dig -2
app_global_put
bytec 5 // "usdc_asset_id"
frame_dig -1
app_global_put
frame_dig -2
asset_params_get AssetClawback
store 1
store 0
load 1
assert
load 0
global CurrentApplicationAddress
==
assert
frame_dig -2
asset_params_get AssetFreeze
store 3
store 2
load 3
assert
load 2
global CurrentApplicationAddress
==
assert
frame_dig -2
asset_params_get AssetDecimals
store 5
store 4
load 5
assert
load 4
pushint 6 // 6
==
assert
frame_dig -2
asset_params_get AssetReserve
store 7
store 6
load 7
assert
bytec 4 // "reserve_address"
load 6
app_global_put
frame_dig -1
asset_params_get AssetDecimals
store 9
store 8
load 9
assert
load 8
pushint 6 // 6
==
assert
itxn_begin
intc_0 // 0
itxn_field Fee
intc_2 // axfer
itxn_field TypeEnum
frame_dig -1
itxn_field XferAsset
global CurrentApplicationAddress
itxn_field AssetReceiver
intc_0 // 0
itxn_field AssetAmount
itxn_submit
itxn_begin
intc_0 // 0
itxn_field Fee
intc_2 // axfer
itxn_field TypeEnum
frame_dig -2
itxn_field XferAsset
global CurrentApplicationAddress
itxn_field AssetReceiver
intc_0 // 0
itxn_field AssetAmount
itxn_submit
pushbytes 0x6173736574735f7365743a // "assets_set:"
frame_dig -2
itob
concat
bytec 11 // ":"
concat
frame_dig -1
itob
concat
log
intc_1 // 1
return

// pause
pause_2:
proto 0 0
txn Sender
bytec_2 // "admin"
app_global_get
==
bytec_3 // "is_paused"
app_global_get
intc_0 // 0
==
&&
assert
txn RekeyTo
global ZeroAddress
==
assert
bytec_3 // "is_paused"
intc_1 // 1
app_global_put
pushbytes 0x706175736564 // "paused"
log
intc_1 // 1
return

// unpause
unpause_3:
proto 0 0
txn Sender
bytec_2 // "admin"
app_global_get
==
bytec_3 // "is_paused"
app_global_get
intc_1 // 1
==
&&
assert
txn RekeyTo
global ZeroAddress
==
assert
bytec_3 // "is_paused"
intc_0 // 0
app_global_put
pushbytes 0x756e706175736564 // "unpaused"
log
intc_1 // 1
return

// opt_in
optin_4:
proto 0 0
txn RekeyTo
global ZeroAddress
==
assert
txn Sender
bytec 7 // "is_frozen"
intc_0 // 0
app_local_put
txn Sender
bytec 15 // "is_vault"
intc_0 // 0
app_local_put
intc_1 // 1
return

// add_vault
addvault_5:
proto 1 0
txn Sender
bytec_2 // "admin"
app_global_get
==
bytec_3 // "is_paused"
app_global_get
intc_0 // 0
==
&&
assert
txn RekeyTo
global ZeroAddress
==
assert
frame_dig -1
global CurrentApplicationID
app_opted_in
assert
frame_dig -1
bytec 15 // "is_vault"
intc_1 // 1
app_local_put
pushbytes 0x7661756c745f61646465643a // "vault_added:"
frame_dig -1
concat
log
intc_1 // 1
return

// remove_vault
removevault_6:
proto 1 0
txn Sender
bytec_2 // "admin"
app_global_get
==
bytec_3 // "is_paused"
app_global_get
intc_0 // 0
==
&&
assert
txn RekeyTo
global ZeroAddress
==
assert
frame_dig -1
bytec 15 // "is_vault"
intc_0 // 0
app_local_put
pushbytes 0x7661756c745f72656d6f7665643a // "vault_removed:"
frame_dig -1
concat
log
intc_1 // 1
return

// freeze_address
freezeaddress_7:
proto 1 0
txn Sender
bytec_2 // "admin"
app_global_get
==
bytec_3 // "is_paused"
app_global_get
intc_0 // 0
==
&&
assert
txn RekeyTo
global ZeroAddress
==
assert
frame_dig -1
global CurrentApplicationID
app_opted_in
assert
bytec_0 // "cusd_asset_id"
app_global_get
asset_params_get AssetFreeze
store 11
store 10
load 11
assert
load 10
global CurrentApplicationAddress
==
assert
frame_dig -1
bytec_0 // "cusd_asset_id"
app_global_get
asset_holding_get AssetBalance
store 13
store 12
load 13
assert
txn Fee
global MinTxnFee
intc_3 // 2
*
>=
assert
frame_dig -1
bytec 7 // "is_frozen"
intc_1 // 1
app_local_put
itxn_begin
intc_0 // 0
itxn_field Fee
pushint 5 // afrz
itxn_field TypeEnum
bytec_0 // "cusd_asset_id"
app_global_get
itxn_field FreezeAsset
frame_dig -1
itxn_field FreezeAssetAccount
intc_1 // 1
itxn_field FreezeAssetFrozen
itxn_submit
pushbytes 0x667265657a653a // "freeze:"
frame_dig -1
concat
log
intc_1 // 1
return

// unfreeze_address
unfreezeaddress_8:
proto 1 0
txn Sender
bytec_2 // "admin"
app_global_get
==
bytec_3 // "is_paused"
app_global_get
intc_0 // 0
==
&&
assert
txn RekeyTo
global ZeroAddress
==
assert
frame_dig -1
global CurrentApplicationID
app_opted_in
assert
bytec_0 // "cusd_asset_id"
app_global_get
asset_params_get AssetFreeze
store 15
store 14
load 15
assert
load 14
global CurrentApplicationAddress
==
assert
frame_dig -1
bytec_0 // "cusd_asset_id"
app_global_get
asset_holding_get AssetBalance
store 17
store 16
load 17
assert
txn Fee
global MinTxnFee
intc_3 // 2
*
>=
assert
frame_dig -1
bytec 7 // "is_frozen"
intc_0 // 0
app_local_put
itxn_begin
intc_0 // 0
itxn_field Fee
pushint 5 // afrz
itxn_field TypeEnum
bytec_0 // "cusd_asset_id"
app_global_get
itxn_field FreezeAsset
frame_dig -1
itxn_field FreezeAssetAccount
intc_0 // 0
itxn_field FreezeAssetFrozen
itxn_submit
pushbytes 0x756e667265657a653a // "unfreeze:"
frame_dig -1
concat
log
intc_1 // 1
return

// mint_admin
mintadmin_9:
proto 2 0
txn Sender
bytec_2 // "admin"
app_global_get
==
assert
txn RekeyTo
global ZeroAddress
==
assert
bytec_3 // "is_paused"
app_global_get
intc_0 // 0
==
assert
frame_dig -1
bytec 7 // "is_frozen"
app_local_get
intc_0 // 0
==
assert
frame_dig -2
intc_0 // 0
>
assert
bytec_0 // "cusd_asset_id"
app_global_get
intc_0 // 0
!=
assert
bytec_0 // "cusd_asset_id"
app_global_get
asset_params_get AssetClawback
store 19
store 18
load 19
assert
load 18
global CurrentApplicationAddress
==
assert
txn Fee
global MinTxnFee
intc_3 // 2
*
>=
assert
bytec_0 // "cusd_asset_id"
app_global_get
asset_params_get AssetReserve
store 21
store 20
load 21
assert
load 20
bytec 4 // "reserve_address"
app_global_get
==
assert
frame_dig -1
bytec_0 // "cusd_asset_id"
app_global_get
asset_holding_get AssetBalance
store 23
store 22
load 23
assert
bytec 4 // "reserve_address"
app_global_get
bytec_0 // "cusd_asset_id"
app_global_get
asset_holding_get AssetBalance
store 25
store 24
load 25
assert
load 24
frame_dig -2
>=
assert
itxn_begin
intc_0 // 0
itxn_field Fee
intc_2 // axfer
itxn_field TypeEnum
bytec_0 // "cusd_asset_id"
app_global_get
itxn_field XferAsset
frame_dig -2
itxn_field AssetAmount
frame_dig -1
itxn_field AssetReceiver
bytec 4 // "reserve_address"
app_global_get
itxn_field AssetSender
itxn_submit
bytec 12 // "total_minted"
bytec 12 // "total_minted"
app_global_get
frame_dig -2
+
app_global_put
bytec 9 // "tbills_backed_supply"
bytec 9 // "tbills_backed_supply"
app_global_get
frame_dig -2
+
app_global_put
pushbytes 0x61646d696e5f6d696e743a // "admin_mint:"
frame_dig -2
itob
concat
bytec 11 // ":"
concat
frame_dig -1
concat
log
intc_1 // 1
return

// burn_admin
burnadmin_10:
proto 1 0
txn Sender
bytec_2 // "admin"
app_global_get
==
assert
txn RekeyTo
global ZeroAddress
==
assert
bytec_3 // "is_paused"
app_global_get
intc_0 // 0
==
assert
global GroupSize
intc_3 // 2
==
assert
txn GroupIndex
intc_1 // 1
==
assert
gtxn 0 TypeEnum
intc_2 // axfer
==
assert
gtxn 0 XferAsset
bytec_0 // "cusd_asset_id"
app_global_get
==
assert
gtxn 0 AssetReceiver
global CurrentApplicationAddress
==
assert
gtxn 0 AssetAmount
frame_dig -1
==
assert
gtxn 0 Sender
txn Sender
==
assert
gtxn 0 RekeyTo
global ZeroAddress
==
assert
gtxn 0 AssetCloseTo
global ZeroAddress
==
assert
gtxn 0 AssetSender
global ZeroAddress
==
assert
bytec 9 // "tbills_backed_supply"
app_global_get
frame_dig -1
>=
assert
txn Fee
global MinTxnFee
intc_3 // 2
*
>=
assert
bytec_0 // "cusd_asset_id"
app_global_get
asset_params_get AssetReserve
store 27
store 26
load 27
assert
load 26
bytec 4 // "reserve_address"
app_global_get
==
assert
itxn_begin
intc_0 // 0
itxn_field Fee
intc_2 // axfer
itxn_field TypeEnum
bytec_0 // "cusd_asset_id"
app_global_get
itxn_field XferAsset
frame_dig -1
itxn_field AssetAmount
bytec 4 // "reserve_address"
app_global_get
itxn_field AssetReceiver
global CurrentApplicationAddress
itxn_field AssetSender
itxn_submit
bytec 13 // "total_burned"
bytec 13 // "total_burned"
app_global_get
frame_dig -1
+
app_global_put
bytec 9 // "tbills_backed_supply"
bytec 9 // "tbills_backed_supply"
app_global_get
frame_dig -1
-
app_global_put
pushbytes 0x61646d696e5f6275726e3a // "admin_burn:"
frame_dig -1
itob
concat
log
intc_1 // 1
return

// mint_with_collateral
mintwithcollateral_11:
proto 0 0
bytec_3 // "is_paused"
app_global_get
intc_0 // 0
==
assert
txn RekeyTo
global ZeroAddress
==
assert
bytec 5 // "usdc_asset_id"
app_global_get
intc_0 // 0
!=
assert
bytec_0 // "cusd_asset_id"
app_global_get
intc_0 // 0
!=
assert
bytec_0 // "cusd_asset_id"
app_global_get
asset_params_get AssetClawback
store 31
store 30
load 31
assert
load 30
global CurrentApplicationAddress
==
assert
global GroupSize
intc_3 // 2
==
assert
txn GroupIndex
intc_1 // 1
==
assert
gtxn 0 Sender
txn Sender
==
assert
gtxn 0 TypeEnum
intc_2 // axfer
==
assert
gtxn 0 XferAsset
bytec 5 // "usdc_asset_id"
app_global_get
==
assert
gtxn 0 AssetReceiver
global CurrentApplicationAddress
==
assert
gtxn 0 AssetAmount
intc_0 // 0
>
assert
gtxn 0 RekeyTo
global ZeroAddress
==
assert
gtxn 0 AssetCloseTo
global ZeroAddress
==
assert
gtxn 0 AssetSender
global ZeroAddress
==
assert
gtxn 0 Sender
bytec 7 // "is_frozen"
app_local_get
intc_0 // 0
==
assert
gtxn 0 Sender
bytec_0 // "cusd_asset_id"
app_global_get
asset_holding_get AssetBalance
store 33
store 32
load 33
assert
gtxn 0 AssetAmount
store 28
txn Fee
global MinTxnFee
intc_3 // 2
*
>=
assert
load 28
intc 4 // 1000000
mulw
intc_0 // 0
bytec 10 // "collateral_ratio"
app_global_get
divmodw
pop
pop
swap
!
assert
store 29
load 29
intc_0 // 0
>
assert
bytec_0 // "cusd_asset_id"
app_global_get
asset_params_get AssetReserve
store 35
store 34
load 35
assert
load 34
bytec 4 // "reserve_address"
app_global_get
==
assert
bytec 4 // "reserve_address"
app_global_get
bytec_0 // "cusd_asset_id"
app_global_get
asset_holding_get AssetBalance
store 37
store 36
load 37
assert
load 36
load 29
>=
assert
itxn_begin
intc_0 // 0
itxn_field Fee
intc_2 // axfer
itxn_field TypeEnum
bytec_0 // "cusd_asset_id"
app_global_get
itxn_field XferAsset
load 29
itxn_field AssetAmount
gtxn 0 Sender
itxn_field AssetReceiver
bytec 4 // "reserve_address"
app_global_get
itxn_field AssetSender
itxn_submit
bytec 8 // "total_usdc_locked"
bytec 8 // "total_usdc_locked"
app_global_get
load 28
+
app_global_put
bytec 12 // "total_minted"
bytec 12 // "total_minted"
app_global_get
load 29
+
app_global_put
bytec 6 // "cusd_circulating_supply"
bytec 6 // "cusd_circulating_supply"
app_global_get
load 29
+
app_global_put
pushbytes 0x6d696e743a // "mint:"
load 29
itob
concat
bytec 11 // ":"
concat
gtxn 0 Sender
concat
log
intc_1 // 1
return

// burn_for_collateral
burnforcollateral_12:
proto 0 0
bytec_3 // "is_paused"
app_global_get
intc_0 // 0
==
assert
txn RekeyTo
global ZeroAddress
==
assert
bytec 5 // "usdc_asset_id"
app_global_get
intc_0 // 0
!=
assert
bytec_0 // "cusd_asset_id"
app_global_get
intc_0 // 0
!=
assert
bytec_0 // "cusd_asset_id"
app_global_get
asset_params_get AssetClawback
store 41
store 40
load 41
assert
load 40
global CurrentApplicationAddress
==
assert
global GroupSize
intc_3 // 2
==
assert
txn GroupIndex
intc_1 // 1
==
assert
gtxn 0 Sender
txn Sender
==
assert
gtxn 0 TypeEnum
intc_2 // axfer
==
assert
gtxn 0 XferAsset
bytec_0 // "cusd_asset_id"
app_global_get
==
assert
gtxn 0 AssetReceiver
global CurrentApplicationAddress
==
assert
gtxn 0 AssetAmount
intc_0 // 0
>
assert
gtxn 0 RekeyTo
global ZeroAddress
==
assert
gtxn 0 AssetCloseTo
global ZeroAddress
==
assert
gtxn 0 AssetSender
global ZeroAddress
==
assert
gtxn 0 Sender
bytec 7 // "is_frozen"
app_local_get
intc_0 // 0
==
assert
gtxn 0 AssetAmount
store 38
txn Fee
global MinTxnFee
pushint 3 // 3
*
>=
assert
load 38
bytec 10 // "collateral_ratio"
app_global_get
mulw
intc_0 // 0
intc 4 // 1000000
divmodw
pop
pop
swap
!
assert
store 39
load 39
intc_0 // 0
>
assert
global CurrentApplicationAddress
bytec 5 // "usdc_asset_id"
app_global_get
asset_holding_get AssetBalance
store 43
store 42
load 43
assert
load 42
load 39
>=
assert
itxn_begin
intc_0 // 0
itxn_field Fee
intc_2 // axfer
itxn_field TypeEnum
bytec 5 // "usdc_asset_id"
app_global_get
itxn_field XferAsset
load 39
itxn_field AssetAmount
gtxn 0 Sender
itxn_field AssetReceiver
itxn_submit
bytec_0 // "cusd_asset_id"
app_global_get
asset_params_get AssetReserve
store 45
store 44
load 45
assert
load 44
bytec 4 // "reserve_address"
app_global_get
==
assert
itxn_begin
intc_0 // 0
itxn_field Fee
intc_2 // axfer
itxn_field TypeEnum
bytec_0 // "cusd_asset_id"
app_global_get
itxn_field XferAsset
load 38
itxn_field AssetAmount
bytec 4 // "reserve_address"
app_global_get
itxn_field AssetReceiver
global CurrentApplicationAddress
itxn_field AssetSender
itxn_submit
bytec 8 // "total_usdc_locked"
app_global_get
load 39
>=
assert
bytec 6 // "cusd_circulating_supply"
app_global_get
load 38
>=
assert
bytec 8 // "total_usdc_locked"
bytec 8 // "total_usdc_locked"
app_global_get
load 39
-
app_global_put
bytec 13 // "total_burned"
bytec 13 // "total_burned"
app_global_get
load 38
+
app_global_put
bytec 6 // "cusd_circulating_supply"
bytec 6 // "cusd_circulating_supply"
app_global_get
load 38
-
app_global_put
pushbytes 0x6275726e3a // "burn:"
load 38
itob
concat
bytec 11 // ":"
concat
gtxn 0 Sender
concat
log
intc_1 // 1
return

// transfer_cusd
transfercusd_13:
proto 2 0
frame_dig -2
gtxns Sender
txn Sender
==
assert
frame_dig -2
gtxns XferAsset
bytec_0 // "cusd_asset_id"
app_global_get
==
frame_dig -2
gtxns AssetReceiver
frame_dig -1
==
&&
bytec_3 // "is_paused"
app_global_get
intc_0 // 0
==
&&
frame_dig -2
gtxns Sender
bytec 7 // "is_frozen"
app_local_get
intc_0 // 0
==
&&
frame_dig -1
bytec 7 // "is_frozen"
app_local_get
intc_0 // 0
==
&&
assert
frame_dig -2
gtxns RekeyTo
global ZeroAddress
==
assert
frame_dig -2
gtxns AssetCloseTo
global ZeroAddress
==
assert
frame_dig -2
gtxns AssetSender
global ZeroAddress
==
assert
txn RekeyTo
global ZeroAddress
==
assert
intc_1 // 1
return

// update_admin
updateadmin_14:
proto 1 0
txn Sender
bytec_2 // "admin"
app_global_get
==
assert
txn RekeyTo
global ZeroAddress
==
assert
frame_dig -1
len
pushint 32 // 32
==
assert
frame_dig -1
global ZeroAddress
!=
assert
bytec_2 // "admin"
frame_dig -1
app_global_put
pushbytes 0x61646d696e5f6368616e6765643a // "admin_changed:"
frame_dig -1
concat
log
intc_1 // 1
return

// update_collateral_ratio
updatecollateralratio_15:
proto 1 0
txn Sender
bytec_2 // "admin"
app_global_get
==
assert
txn RekeyTo
global ZeroAddress
==
assert
bytec_3 // "is_paused"
app_global_get
intc_0 // 0
==
assert
frame_dig -1
intc 4 // 1000000
>=
assert
frame_dig -1
pushint 2000000 // 2000000
<=
assert
bytec 10 // "collateral_ratio"
frame_dig -1
app_global_put
pushbytes 0x726174696f3a // "ratio:"
frame_dig -1
itob
concat
log
intc_1 // 1
return

// refresh_reserve
refreshreserve_16:
proto 0 0
txn Sender
bytec_2 // "admin"
app_global_get
==
assert
txn RekeyTo
global ZeroAddress
==
assert
bytec_0 // "cusd_asset_id"
app_global_get
asset_params_get AssetReserve
store 47
store 46
load 47
assert
bytec 4 // "reserve_address"
load 46
app_global_put
pushbytes 0x726573657276655f726566726573686564 // "reserve_refreshed"
log
intc_1 // 1
return

// withdraw_usdc
withdrawusdc_17:
proto 2 0
txn Sender
bytec_2 // "admin"
app_global_get
==
assert
txn RekeyTo
global ZeroAddress
==
assert
frame_dig -1
len
pushint 32 // 32
==
assert
global CurrentApplicationAddress
bytec 5 // "usdc_asset_id"
app_global_get
asset_holding_get AssetBalance
store 49
store 48
load 49
assert
load 48
frame_dig -2
>=
assert
load 48
frame_dig -2
-
bytec 6 // "cusd_circulating_supply"
app_global_get
pushint 300000 // 300000
mulw
intc_0 // 0
intc 4 // 1000000
divmodw
pop
pop
swap
!
assert
>=
assert
txn Fee
global MinTxnFee
intc_3 // 2
*
>=
assert
itxn_begin
intc_0 // 0
itxn_field Fee
intc_2 // axfer
itxn_field TypeEnum
bytec 5 // "usdc_asset_id"
app_global_get
itxn_field XferAsset
frame_dig -2
itxn_field AssetAmount
frame_dig -1
itxn_field AssetReceiver
itxn_submit
bytec 8 // "total_usdc_locked"
app_global_get
frame_dig -2
>=
assert
bytec 8 // "total_usdc_locked"
bytec 8 // "total_usdc_locked"
app_global_get
frame_dig -2
-
app_global_put
pushbytes 0x757364635f77697468647261773a // "usdc_withdraw:"
frame_dig -2
itob
concat
bytec 11 // ":"
concat
frame_dig -1
concat
log
intc_1 // 1
return

// get_stats
getstats_18:
proto 0 1
bytec_1 // ""
intc_0 // 0
dupn 3
bytec_1 // ""
dup
bytec 12 // "total_minted"
app_global_get
frame_bury 1
bytec 13 // "total_burned"
app_global_get
frame_bury 2
frame_dig 1
itob
frame_dig 2
itob
concat
frame_bury 0
retsub

// get_reserves
getreserves_19:
proto 0 1
bytec_1 // ""
intc_0 // 0
dupn 6
bytec_1 // ""
dup
bytec 8 // "total_usdc_locked"
app_global_get
frame_bury 1
bytec 6 // "cusd_circulating_supply"
app_global_get
frame_bury 2
bytec 9 // "tbills_backed_supply"
app_global_get
frame_bury 3
bytec 10 // "collateral_ratio"
app_global_get
frame_bury 4
bytec 6 // "cusd_circulating_supply"
app_global_get
bytec 9 // "tbills_backed_supply"
app_global_get
+
frame_bury 5
frame_dig 1
itob
frame_dig 2
itob
concat
frame_dig 3
itob
concat
frame_dig 4
itob
concat
frame_dig 5
itob
concat
frame_bury 0
retsub

// verify_backing
verifybacking_20:
proto 0 1
bytec_1 // ""
intc_0 // 0
dupn 3
bytec_1 // ""
dup
global CurrentApplicationAddress
bytec 5 // "usdc_asset_id"
app_global_get
asset_holding_get AssetBalance
store 51
store 50
load 51
assert
load 50
frame_bury 2
load 50
intc 4 // 1000000
mulw
intc_0 // 0
intc_1 // 1
divmodw
pop
pop
swap
!
assert
bytec 6 // "cusd_circulating_supply"
app_global_get
bytec 10 // "collateral_ratio"
app_global_get
mulw
intc_0 // 0
intc_1 // 1
divmodw
pop
pop
swap
!
assert
>=
!
!
frame_bury 1
bytec 16 // 0x00
intc_0 // 0
frame_dig 1
setbit
frame_dig 2
itob
concat
frame_bury 0
retsub

// is_frozen
isfrozen_21:
proto 1 1
intc_0 // 0
frame_dig -1
bytec 7 // "is_frozen"
app_local_get
intc_1 // 1
==
!
!
frame_bury 0
retsub

// is_vault
isvault_22:
proto 1 1
intc_0 // 0
frame_dig -1
bytec 15 // "is_vault"
app_local_get
intc_1 // 1
==
!
!
frame_bury 0
retsub

// update
update_23:
proto 0 0
txn Sender
bytec_2 // "admin"
app_global_get
==
assert
txn RekeyTo
global ZeroAddress
==
assert
intc_1 // 1
return

// delete
delete_24:
proto 0 0
txn Sender
bytec_2 // "admin"
app_global_get
==
assert
txn RekeyTo
global ZeroAddress
==
assert
bytec_0 // "cusd_asset_id"
app_global_get
intc_0 // 0
!=
assert
bytec 6 // "cusd_circulating_supply"
app_global_get
intc_0 // 0
==
assert
bytec 9 // "tbills_backed_supply"
app_global_get
intc_0 // 0
==
assert
global CurrentApplicationAddress
bytec_0 // "cusd_asset_id"
app_global_get
asset_holding_get AssetBalance
store 53
store 52
load 53
assert
load 52
intc_0 // 0
==
assert
bytec_0 // "cusd_asset_id"
app_global_get
asset_params_get AssetTotal
store 55
store 54
load 55
assert
bytec_0 // "cusd_asset_id"
app_global_get
asset_params_get AssetReserve
store 57
store 56
load 57
assert
load 56
bytec_0 // "cusd_asset_id"
app_global_get
asset_holding_get AssetBalance
store 59
store 58
load 59
assert
load 58
load 54
==
assert
bytec_0 // "cusd_asset_id"
app_global_get
asset_params_get AssetClawback
store 61
store 60
bytec_0 // "cusd_asset_id"
app_global_get
asset_params_get AssetFreeze
store 63
store 62
bytec_0 // "cusd_asset_id"
app_global_get
asset_params_get AssetManager
store 65
store 64
load 61
assert
load 63
assert
load 65
assert
load 60
global CurrentApplicationAddress
!=
assert
load 62
global CurrentApplicationAddress
!=
assert
load 64
global ZeroAddress
==
assert
intc_1 // 1
return

// create_caster
createcaster_25:
proto 0 0
callsub create_0
retsub

// setup_assets_caster
setupassetscaster_26:
proto 0 0
intc_0 // 0
dup
txna ApplicationArgs 1
btoi
frame_bury 0
txna ApplicationArgs 2
btoi
frame_bury 1
frame_dig 0
frame_dig 1
callsub setupassets_1
retsub

// pause_caster
pausecaster_27:
proto 0 0
callsub pause_2
retsub

// unpause_caster
unpausecaster_28:
proto 0 0
callsub unpause_3
retsub

// opt_in_caster
optincaster_29:
proto 0 0
callsub optin_4
retsub

// add_vault_caster
addvaultcaster_30:
proto 0 0
bytec_1 // ""
txna ApplicationArgs 1
frame_bury 0
frame_dig 0
callsub addvault_5
retsub

// remove_vault_caster
removevaultcaster_31:
proto 0 0
bytec_1 // ""
txna ApplicationArgs 1
frame_bury 0
frame_dig 0
callsub removevault_6
retsub

// freeze_address_caster
freezeaddresscaster_32:
proto 0 0
bytec_1 // ""
txna ApplicationArgs 1
frame_bury 0
frame_dig 0
callsub freezeaddress_7
retsub

// unfreeze_address_caster
unfreezeaddresscaster_33:
proto 0 0
bytec_1 // ""
txna ApplicationArgs 1
frame_bury 0
frame_dig 0
callsub unfreezeaddress_8
retsub

// mint_admin_caster
mintadmincaster_34:
proto 0 0
intc_0 // 0
bytec_1 // ""
txna ApplicationArgs 1
btoi
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
frame_dig 0
frame_dig 1
callsub mintadmin_9
retsub

// burn_admin_caster
burnadmincaster_35:
proto 0 0
intc_0 // 0
txna ApplicationArgs 1
btoi
frame_bury 0
frame_dig 0
callsub burnadmin_10
retsub

// mint_with_collateral_caster
mintwithcollateralcaster_36:
proto 0 0
callsub mintwithcollateral_11
retsub

// burn_for_collateral_caster
burnforcollateralcaster_37:
proto 0 0
callsub burnforcollateral_12
retsub

// transfer_cusd_caster
transfercusdcaster_38:
proto 0 0
intc_0 // 0
bytec_1 // ""
txna ApplicationArgs 1
frame_bury 1
txn GroupIndex
intc_1 // 1
-
frame_bury 0
frame_dig 0
gtxns TypeEnum
intc_2 // axfer
==
assert
frame_dig 0
frame_dig 1
callsub transfercusd_13
retsub

// update_admin_caster
updateadmincaster_39:
proto 0 0
bytec_1 // ""
txna ApplicationArgs 1
frame_bury 0
frame_dig 0
callsub updateadmin_14
retsub

// update_collateral_ratio_caster
updatecollateralratiocaster_40:
proto 0 0
intc_0 // 0
txna ApplicationArgs 1
btoi
frame_bury 0
frame_dig 0
callsub updatecollateralratio_15
retsub

// refresh_reserve_caster
refreshreservecaster_41:
proto 0 0
callsub refreshreserve_16
retsub

// withdraw_usdc_caster
withdrawusdccaster_42:
proto 0 0
intc_0 // 0
bytec_1 // ""
txna ApplicationArgs 1
btoi
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
frame_dig 0
frame_dig 1
callsub withdrawusdc_17
retsub

// get_stats_caster
getstatscaster_43:
proto 0 0
bytec_1 // ""
callsub getstats_18
frame_bury 0
bytec 14 // 0x151f7c75
frame_dig 0
concat
log
retsub

// get_reserves_caster
getreservescaster_44:
proto 0 0
bytec_1 // ""
callsub getreserves_19
frame_bury 0
bytec 14 // 0x151f7c75
frame_dig 0
concat
log
retsub

// verify_backing_caster
verifybackingcaster_45:
proto 0 0
bytec_1 // ""
callsub verifybacking_20
frame_bury 0
bytec 14 // 0x151f7c75
frame_dig 0
concat
log
retsub

// is_frozen_caster
isfrozencaster_46:
proto 0 0
intc_0 // 0
bytec_1 // ""
txna ApplicationArgs 1
frame_bury 1
frame_dig 1
callsub isfrozen_21
frame_bury 0
bytec 14 // 0x151f7c75
bytec 16 // 0x00
intc_0 // 0
frame_dig 0
setbit
concat
log
retsub

// is_vault_caster
isvaultcaster_47:
proto 0 0
intc_0 // 0
bytec_1 // ""
txna ApplicationArgs 1
frame_bury 1
frame_dig 1
callsub isvault_22
frame_bury 0
bytec 14 // 0x151f7c75
bytec 16 // 0x00
intc_0 // 0
frame_dig 0
setbit
concat
log
retsub

// update_caster
updatecaster_48:
proto 0 0
callsub update_23
retsub

// delete_caster
deletecaster_49:
proto 0 0
callsub delete_24
retsub