{
    "hints": {
        "create()void": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "setup_assets(uint64,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "create_trade(string,axfer)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "accept_trade(string)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "mark_as_paid(string,string)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "confirm_payment_received(string)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "cancel_trade(string)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "open_dispute(string,string)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "resolve_dispute(string,address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "pause()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "unpause()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_sponsor(address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_stats()(uint64,uint64,uint64,uint64)": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_volume()(uint64,uint64)": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        },
        "delete()void": {
            "call_config": {
                "delete_application": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 2,
            "num_uints": 10
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "active_trades": {
                    "type": "uint64",
                    "key": "active_trades",
                    "descr": "Number of active trades (for safe deletion)"
                },
                "admin": {
                    "type": "bytes",
                    "key": "admin",
                    "descr": "Admin address"
                },
                "confio_asset_id": {
                    "type": "uint64",
                    "key": "confio_asset_id",
                    "descr": "CONFIO token asset ID"
                },
                "cusd_asset_id": {
                    "type": "uint64",
                    "key": "cusd_asset_id",
                    "descr": "Conf\u00edo Dollar asset ID"
                },
                "is_paused": {
                    "type": "uint64",
                    "key": "is_paused",
                    "descr": "System pause state"
                },
                "sponsor_address": {
                    "type": "bytes",
                    "key": "sponsor_address",
                    "descr": "Optional sponsor address for MBR/fee funding"
                },
                "total_confio_volume": {
                    "type": "uint64",
                    "key": "total_confio_volume",
                    "descr": "Total CONFIO volume"
                },
                "total_cusd_volume": {
                    "type": "uint64",
                    "key": "total_cusd_volume",
                    "descr": "Total Conf\u00edo Dollar volume"
                },
                "total_trades_cancelled": {
                    "type": "uint64",
                    "key": "total_trades_cancelled",
                    "descr": "Total trades cancelled"
                },
                "total_trades_completed": {
                    "type": "uint64",
                    "key": "total_trades_completed",
                    "descr": "Total trades completed"
                },
                "total_trades_created": {
                    "type": "uint64",
                    "key": "total_trades_created",
                    "descr": "Total trades created"
                },
                "total_trades_disputed": {
                    "type": "uint64",
                    "key": "total_trades_disputed",
                    "descr": "Total trades disputed"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "P2PTrade",
        "methods": [
            {
                "name": "create",
                "args": [],
                "returns": {
                    "type": "void"
                },
                "desc": "Initialize the P2P trading contract"
            },
            {
                "name": "setup_assets",
                "args": [
                    {
                        "type": "uint64",
                        "name": "cusd_id"
                    },
                    {
                        "type": "uint64",
                        "name": "confio_id"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Setup asset IDs for trading"
            },
            {
                "name": "create_trade",
                "args": [
                    {
                        "type": "string",
                        "name": "trade_id"
                    },
                    {
                        "type": "axfer",
                        "name": "asset_transfer"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Create a new P2P trade offer (seller deposits crypto)\nTrade data stored in box storage with payer tracking Note: fiat_amount and currency stored off-chain with trade_id"
            },
            {
                "name": "accept_trade",
                "args": [
                    {
                        "type": "string",
                        "name": "trade_id"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Buyer accepts the trade - starts 15-minute window"
            },
            {
                "name": "mark_as_paid",
                "args": [
                    {
                        "type": "string",
                        "name": "trade_id"
                    },
                    {
                        "type": "string",
                        "name": "payment_ref"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Buyer marks trade as paid and can get one-time 10-minute extension"
            },
            {
                "name": "confirm_payment_received",
                "args": [
                    {
                        "type": "string",
                        "name": "trade_id"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Seller confirms fiat payment received, releases crypto to buyer"
            },
            {
                "name": "cancel_trade",
                "args": [
                    {
                        "type": "string",
                        "name": "trade_id"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Cancel trade (by seller if pending, or anyone if expired with grace period)"
            },
            {
                "name": "open_dispute",
                "args": [
                    {
                        "type": "string",
                        "name": "trade_id"
                    },
                    {
                        "type": "string",
                        "name": "reason"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Open dispute (by buyer or seller) - tracks payer for MBR refund"
            },
            {
                "name": "resolve_dispute",
                "args": [
                    {
                        "type": "string",
                        "name": "trade_id"
                    },
                    {
                        "type": "address",
                        "name": "winner"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Admin resolves dispute - refunds both boxes"
            },
            {
                "name": "pause",
                "args": [],
                "returns": {
                    "type": "void"
                },
                "desc": "Pause trading"
            },
            {
                "name": "unpause",
                "args": [],
                "returns": {
                    "type": "void"
                },
                "desc": "Unpause trading"
            },
            {
                "name": "set_sponsor",
                "args": [
                    {
                        "type": "address",
                        "name": "sponsor"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Admin sets or updates the optional sponsor address for MBR/fee funding"
            },
            {
                "name": "get_stats",
                "args": [],
                "returns": {
                    "type": "(uint64,uint64,uint64,uint64)"
                },
                "desc": "Get comprehensive trading statistics"
            },
            {
                "name": "get_volume",
                "args": [],
                "returns": {
                    "type": "(uint64,uint64)"
                },
                "desc": "Get trading volume (cusd, confio)"
            },
            {
                "name": "delete",
                "args": [],
                "returns": {
                    "type": "void"
                },
                "desc": "Only admin can delete - must have no active trades"
            }
        ],
        "networks": {}
    },
    "bare_call_config": {}
}