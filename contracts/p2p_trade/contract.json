{
    "name": "P2PTrade",
    "methods": [
        {
            "name": "create",
            "args": [],
            "returns": {
                "type": "void"
            },
            "desc": "Initialize the P2P trading contract"
        },
        {
            "name": "setup_assets",
            "args": [
                {
                    "type": "uint64",
                    "name": "cusd_id"
                },
                {
                    "type": "uint64",
                    "name": "confio_id"
                }
            ],
            "returns": {
                "type": "void"
            },
            "desc": "Setup asset IDs for trading"
        },
        {
            "name": "create_trade",
            "args": [
                {
                    "type": "string",
                    "name": "trade_id"
                },
                {
                    "type": "axfer",
                    "name": "asset_transfer"
                }
            ],
            "returns": {
                "type": "void"
            },
            "desc": "Create a new P2P trade offer (seller deposits crypto)\nTrade data stored in box storage with payer tracking Note: fiat_amount and currency stored off-chain with trade_id BOX REFS REQUIRED: trade_id"
        },
        {
            "name": "accept_trade",
            "args": [
                {
                    "type": "string",
                    "name": "trade_id"
                }
            ],
            "returns": {
                "type": "void"
            },
            "desc": "Buyer accepts the trade - starts 15-minute window\nBOX REFS REQUIRED: trade_id"
        },
        {
            "name": "mark_as_paid",
            "args": [
                {
                    "type": "string",
                    "name": "trade_id"
                },
                {
                    "type": "string",
                    "name": "payment_ref"
                }
            ],
            "returns": {
                "type": "void"
            },
            "desc": "Buyer marks trade as paid and can get one-time 10-minute extension\nBOX REFS REQUIRED: trade_id, trade_id+\"_paid\" (will be created)"
        },
        {
            "name": "confirm_payment_received",
            "args": [
                {
                    "type": "string",
                    "name": "trade_id"
                }
            ],
            "returns": {
                "type": "void"
            },
            "desc": "Seller confirms fiat payment received, releases crypto to buyer\nBOX REFS REQUIRED: trade_id, trade_id+\"_paid\" (if exists)"
        },
        {
            "name": "cancel_trade",
            "args": [
                {
                    "type": "string",
                    "name": "trade_id"
                }
            ],
            "returns": {
                "type": "void"
            },
            "desc": "Cancel trade (by seller if pending, or anyone if expired with grace period)\nBOX REFS REQUIRED: trade_id, trade_id+\"_paid\" (if exists)"
        },
        {
            "name": "open_dispute",
            "args": [
                {
                    "type": "string",
                    "name": "trade_id"
                },
                {
                    "type": "string",
                    "name": "reason"
                }
            ],
            "returns": {
                "type": "void"
            },
            "desc": "Open dispute (by buyer or seller) - tracks payer for MBR refund\nBOX REFS REQUIRED: trade_id, trade_id+\"_dispute\" (will be created)"
        },
        {
            "name": "resolve_dispute",
            "args": [
                {
                    "type": "string",
                    "name": "trade_id"
                },
                {
                    "type": "address",
                    "name": "winner"
                }
            ],
            "returns": {
                "type": "void"
            },
            "desc": "Admin resolves dispute - refunds both boxes\nBOX REFS REQUIRED: trade_id, trade_id+\"_dispute\", trade_id+\"_paid\" (if exists)"
        },
        {
            "name": "pause",
            "args": [],
            "returns": {
                "type": "void"
            },
            "desc": "Pause trading"
        },
        {
            "name": "unpause",
            "args": [],
            "returns": {
                "type": "void"
            },
            "desc": "Unpause trading"
        },
        {
            "name": "set_sponsor",
            "args": [
                {
                    "type": "address",
                    "name": "sponsor"
                }
            ],
            "returns": {
                "type": "void"
            },
            "desc": "Admin sets or updates the optional sponsor address for MBR/fee funding"
        },
        {
            "name": "get_trade",
            "args": [
                {
                    "type": "string",
                    "name": "trade_id"
                }
            ],
            "returns": {
                "type": "string"
            },
            "desc": "Get trade details: (seller, amount, asset_id, created_at, expires_at, status, accepted_at, buyer, mbr_payer)"
        },
        {
            "name": "get_stats",
            "args": [],
            "returns": {
                "type": "(uint64,uint64,uint64,uint64)"
            },
            "desc": "Get comprehensive trading statistics"
        },
        {
            "name": "get_volume",
            "args": [],
            "returns": {
                "type": "(uint64,uint64)"
            },
            "desc": "Get trading volume (cusd, confio)"
        },
        {
            "name": "delete",
            "args": [],
            "returns": {
                "type": "void"
            },
            "desc": "Only admin can delete - must have no active trades"
        }
    ],
    "networks": {}
}