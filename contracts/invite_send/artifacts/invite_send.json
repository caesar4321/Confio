{
    "hints": {
        "create()void": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "setup_assets(uint64,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "create_invitation(string,axfer,string)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "claim_invitation(string,address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "reclaim_invitation(string)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "pause()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "unpause()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_sponsor(address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_invitation_status(string)(bool,bool,bool)": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_receipt(string)(bool,uint64,uint64,uint64,uint64)": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_stats()(uint64,uint64,uint64,uint64,uint64)": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_admin(address)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "delete()void": {
            "call_config": {
                "delete_application": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 2,
            "num_uints": 8
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "admin": {
                    "type": "bytes",
                    "key": "admin",
                    "descr": "Admin address"
                },
                "confio_asset_id": {
                    "type": "uint64",
                    "key": "confio_asset_id",
                    "descr": "CONFIO token asset ID"
                },
                "cusd_asset_id": {
                    "type": "uint64",
                    "key": "cusd_asset_id",
                    "descr": "Conf\u00edo Dollar asset ID"
                },
                "is_paused": {
                    "type": "uint64",
                    "key": "is_paused",
                    "descr": "System pause state"
                },
                "sponsor_address": {
                    "type": "bytes",
                    "key": "sponsor_address",
                    "descr": "Sponsor address allowed to send app calls on behalf of users"
                },
                "total_confio_locked": {
                    "type": "uint64",
                    "key": "total_confio_locked",
                    "descr": "Total CONFIO currently locked"
                },
                "total_cusd_locked": {
                    "type": "uint64",
                    "key": "total_cusd_locked",
                    "descr": "Total Conf\u00edo Dollar currently locked"
                },
                "total_invitations_claimed": {
                    "type": "uint64",
                    "key": "total_invitations_claimed",
                    "descr": "Total invitations claimed"
                },
                "total_invitations_created": {
                    "type": "uint64",
                    "key": "total_invitations_created",
                    "descr": "Total invitations created"
                },
                "total_invitations_reclaimed": {
                    "type": "uint64",
                    "key": "total_invitations_reclaimed",
                    "descr": "Total invitations reclaimed"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "InviteSend",
        "methods": [
            {
                "name": "create",
                "args": [],
                "returns": {
                    "type": "void"
                },
                "desc": "Initialize the invite & send contract"
            },
            {
                "name": "setup_assets",
                "args": [
                    {
                        "type": "uint64",
                        "name": "cusd_id"
                    },
                    {
                        "type": "uint64",
                        "name": "confio_id"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Setup asset IDs for invitations"
            },
            {
                "name": "create_invitation",
                "args": [
                    {
                        "type": "string",
                        "name": "invitation_id"
                    },
                    {
                        "type": "axfer",
                        "name": "asset_transfer"
                    },
                    {
                        "type": "string",
                        "name": "message"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Create an invitation with escrowed funds\nInvitation data stored in box storage"
            },
            {
                "name": "claim_invitation",
                "args": [
                    {
                        "type": "string",
                        "name": "invitation_id"
                    },
                    {
                        "type": "address",
                        "name": "recipient"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Admin claims invitation on behalf of verified user\nCalled after user verification through Django backend"
            },
            {
                "name": "reclaim_invitation",
                "args": [
                    {
                        "type": "string",
                        "name": "invitation_id"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Sender reclaims expired invitation\nCan only be called after 7-day expiry period"
            },
            {
                "name": "pause",
                "args": [],
                "returns": {
                    "type": "void"
                },
                "desc": "Pause invitation system"
            },
            {
                "name": "unpause",
                "args": [],
                "returns": {
                    "type": "void"
                },
                "desc": "Unpause invitation system"
            },
            {
                "name": "set_sponsor",
                "args": [
                    {
                        "type": "address",
                        "name": "sponsor"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Admin sets or updates the sponsor address for sponsored transactions"
            },
            {
                "name": "get_invitation_status",
                "args": [
                    {
                        "type": "string",
                        "name": "invitation_id"
                    }
                ],
                "returns": {
                    "type": "(bool,bool,bool)"
                },
                "desc": "Get invitation status\nReturns: (exists, is_claimed, is_expired)"
            },
            {
                "name": "get_receipt",
                "args": [
                    {
                        "type": "string",
                        "name": "invitation_id"
                    }
                ],
                "returns": {
                    "type": "(bool,uint64,uint64,uint64,uint64)"
                },
                "desc": "Read compact receipt for an invitation id.\nReturns: (exists, status_code, asset_id, amount, timestamp) status_code: 1 = claimed, 2 = reclaimed"
            },
            {
                "name": "get_stats",
                "args": [],
                "returns": {
                    "type": "(uint64,uint64,uint64,uint64,uint64)"
                },
                "desc": "Get invitation statistics"
            },
            {
                "name": "set_admin",
                "args": [
                    {
                        "type": "address",
                        "name": "new_admin"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Admin rotation for operational flexibility"
            },
            {
                "name": "delete",
                "args": [],
                "returns": {
                    "type": "void"
                },
                "desc": "Only admin can delete - prevent destroying app while value is locked"
            }
        ],
        "networks": {}
    },
    "bare_call_config": {}
}