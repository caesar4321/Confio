# Generated by Django 4.2.20 on 2025-07-29 15:55

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DeviceFingerprint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fingerprint', models.CharField(help_text='Unique device fingerprint hash', max_length=255, unique=True)),
                ('device_details', models.JSONField(default=dict, help_text='Detailed device information')),
                ('risk_score', models.IntegerField(default=0, help_text='Risk score 0-100')),
                ('total_users', models.IntegerField(default=0, help_text='Total unique users on this device')),
                ('first_seen', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_seen', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_blocked', models.BooleanField(default=False)),
                ('blocked_reason', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Device Fingerprint',
                'verbose_name_plural': 'Device Fingerprints',
            },
        ),
        migrations.CreateModel(
            name='IPAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(unique=True)),
                ('country_code', models.CharField(blank=True, help_text='ISO country code', max_length=2)),
                ('country_name', models.CharField(blank=True, max_length=100)),
                ('region', models.CharField(blank=True, max_length=100)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('is_vpn', models.BooleanField(default=False, help_text='Detected as VPN/Proxy')),
                ('is_tor', models.BooleanField(default=False, help_text='Detected as Tor exit node')),
                ('is_datacenter', models.BooleanField(default=False, help_text='Detected as datacenter IP')),
                ('risk_score', models.IntegerField(default=0, help_text='Risk score 0-100')),
                ('first_seen', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_seen', models.DateTimeField(default=django.utils.timezone.now)),
                ('total_users', models.IntegerField(default=0, help_text='Total unique users from this IP')),
                ('is_blocked', models.BooleanField(default=False)),
                ('blocked_reason', models.TextField(blank=True)),
                ('blocked_at', models.DateTimeField(blank=True, null=True)),
                ('blocked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ips_blocked', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'IP Address',
                'verbose_name_plural': 'IP Addresses',
            },
        ),
        migrations.CreateModel(
            name='SuspiciousActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Soft delete timestamp', null=True)),
                ('activity_type', models.CharField(choices=[('rapid_referrals', 'Referidos Rápidos'), ('duplicate_device', 'Dispositivo Duplicado'), ('unusual_pattern', 'Patrón Inusual'), ('fake_viral', 'Viral Falso'), ('account_farming', 'Farming de Cuentas'), ('money_laundering', 'Lavado de Dinero'), ('high_volume', 'Volumen Alto Inusual'), ('rapid_trades', 'Intercambios Rápidos'), ('price_manipulation', 'Manipulación de Precios'), ('multiple_accounts', 'Múltiples Cuentas'), ('vpn_abuse', 'Abuso de VPN'), ('location_mismatch', 'Ubicación No Coincide'), ('device_fingerprint', 'Huella Digital Sospechosa')], max_length=30)),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('investigating', 'Investigando'), ('confirmed', 'Confirmado'), ('dismissed', 'Descartado'), ('banned', 'Usuario Baneado')], default='pending', max_length=20)),
                ('detection_data', models.JSONField(help_text='Data that triggered the detection')),
                ('severity_score', models.PositiveIntegerField(default=1, help_text='Severity score 1-10')),
                ('investigation_notes', models.TextField(blank=True)),
                ('action_taken', models.TextField(blank=True, help_text='What action was taken')),
                ('related_ips', django.contrib.postgres.fields.ArrayField(base_field=models.GenericIPAddressField(), blank=True, default=list, help_text='IP addresses involved', size=None)),
                ('investigated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='security_investigated_activities', to=settings.AUTH_USER_MODEL)),
                ('related_users', models.ManyToManyField(blank=True, help_text='Other users potentially involved', related_name='related_suspicious_activities', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='security_suspicious_activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Suspicious Activity',
                'verbose_name_plural': 'Suspicious Activities',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_used', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_used', models.DateTimeField(default=django.utils.timezone.now)),
                ('total_sessions', models.IntegerField(default=1)),
                ('is_trusted', models.BooleanField(default=False, help_text='User has verified this device')),
                ('trusted_at', models.DateTimeField(blank=True, null=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='security.devicefingerprint')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Device',
                'verbose_name_plural': 'User Devices',
                'unique_together': {('user', 'device')},
            },
        ),
        migrations.CreateModel(
            name='UserBan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Soft delete timestamp', null=True)),
                ('ban_type', models.CharField(choices=[('temporary', 'Temporal'), ('permanent', 'Permanente'), ('trading', 'Solo Trading'), ('withdrawal', 'Solo Retiros')], max_length=20)),
                ('reason', models.CharField(choices=[('fraud', 'Fraude'), ('money_laundering', 'Lavado de Dinero'), ('terms_violation', 'Violación de Términos'), ('multiple_accounts', 'Múltiples Cuentas'), ('suspicious_activity', 'Actividad Sospechosa'), ('document_fraud', 'Fraude Documental')], max_length=30)),
                ('reason_details', models.TextField(help_text='Detailed explanation of the ban')),
                ('banned_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('expires_at', models.DateTimeField(blank=True, help_text='When the ban expires (null for permanent)', null=True)),
                ('appeal_submitted', models.BooleanField(default=False)),
                ('appeal_text', models.TextField(blank=True)),
                ('appeal_decision', models.TextField(blank=True)),
                ('appeal_reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ban_appeals_reviewed', to=settings.AUTH_USER_MODEL)),
                ('banned_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bans_issued', to=settings.AUTH_USER_MODEL)),
                ('suspicious_activity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resulting_bans', to='security.suspiciousactivity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bans', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Ban',
                'verbose_name_plural': 'User Bans',
                'ordering': ['-banned_at'],
            },
        ),
        migrations.CreateModel(
            name='IdentityVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Soft delete timestamp', null=True)),
                ('verified_first_name', models.CharField(help_text='First name as verified from documents', max_length=100)),
                ('verified_last_name', models.CharField(help_text='Last name as verified from documents', max_length=100)),
                ('verified_date_of_birth', models.DateField(help_text='Date of birth as verified from documents')),
                ('verified_nationality', models.CharField(help_text='Nationality ISO code (e.g., VEN, ARG, COL)', max_length=3)),
                ('verified_address', models.TextField(help_text='Full address as verified from documents')),
                ('verified_city', models.CharField(help_text='City as verified from documents', max_length=100)),
                ('verified_state', models.CharField(help_text='State/Province as verified from documents', max_length=100)),
                ('verified_country', models.CharField(help_text='Country ISO code as verified from documents', max_length=3)),
                ('verified_postal_code', models.CharField(blank=True, help_text='Postal code as verified from documents', max_length=20, null=True)),
                ('document_type', models.CharField(choices=[('national_id', 'Cédula de Identidad'), ('passport', 'Pasaporte'), ('drivers_license', 'Licencia de Conducir'), ('foreign_id', 'Documento de Identidad Extranjero')], help_text='Type of identification document', max_length=20)),
                ('document_number', models.CharField(help_text='Document number/ID', max_length=50)),
                ('document_issuing_country', models.CharField(help_text='Country that issued the document', max_length=3)),
                ('document_expiry_date', models.DateField(blank=True, help_text='Document expiry date if applicable', null=True)),
                ('document_front_image', models.FileField(help_text='Front side of identification document', upload_to='verification_documents/')),
                ('document_back_image', models.FileField(blank=True, help_text='Back side of identification document', null=True, upload_to='verification_documents/')),
                ('selfie_with_document', models.FileField(help_text='Selfie holding the identification document', upload_to='verification_documents/')),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('verified', 'Verificado'), ('rejected', 'Rechazado'), ('expired', 'Expirado')], default='pending', help_text='Current verification status', max_length=20)),
                ('verified_at', models.DateTimeField(blank=True, help_text='Date and time when verification was approved', null=True)),
                ('rejected_reason', models.TextField(blank=True, help_text='Reason for rejection if verification was rejected', null=True)),
                ('risk_score', models.IntegerField(default=0, help_text='Risk score 0-100 based on various factors')),
                ('risk_factors', models.JSONField(blank=True, default=dict, help_text='Risk factors identified during verification')),
                ('user', models.ForeignKey(help_text='User being verified', on_delete=django.db.models.deletion.CASCADE, related_name='security_verifications', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, help_text='Admin user who approved the verification', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='security_verifications_approved', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Identity Verification',
                'verbose_name_plural': 'Identity Verifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='devicefingerprint',
            name='users',
            field=models.ManyToManyField(related_name='device_fingerprints', through='security.UserDevice', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='AMLCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Soft delete timestamp', null=True)),
                ('check_type', models.CharField(choices=[('manual', 'Manual Review'), ('automated', 'Automated Check'), ('periodic', 'Periodic Review'), ('triggered', 'Triggered by Activity')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('cleared', 'Aprobado'), ('flagged', 'Marcado'), ('escalated', 'Escalado'), ('blocked', 'Bloqueado')], default='pending', max_length=20)),
                ('risk_score', models.IntegerField(default=0, help_text='AML risk score 0-100')),
                ('risk_factors', models.JSONField(default=dict, help_text='Identified risk factors')),
                ('transaction_volume_30d', models.DecimalField(decimal_places=2, default=0, help_text='Total transaction volume in last 30 days (USD)', max_digits=20)),
                ('transaction_count_30d', models.IntegerField(default=0, help_text='Number of transactions in last 30 days')),
                ('unusual_patterns', models.JSONField(blank=True, default=list, help_text='Detected unusual transaction patterns')),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('review_notes', models.TextField(blank=True)),
                ('actions_required', models.JSONField(blank=True, default=list, help_text='Required actions based on check')),
                ('actions_taken', models.JSONField(blank=True, default=list, help_text='Actions taken after review')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='aml_checks_reviewed', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aml_checks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AML Check',
                'verbose_name_plural': 'AML Checks',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(help_text='Django session key', max_length=255, unique=True)),
                ('started_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_activity', models.DateTimeField(default=django.utils.timezone.now)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('device_fingerprint', models.CharField(help_text='Browser/device fingerprint', max_length=255)),
                ('user_agent', models.TextField()),
                ('device_type', models.CharField(choices=[('mobile', 'Mobile'), ('tablet', 'Tablet'), ('desktop', 'Desktop'), ('unknown', 'Unknown')], default='unknown', max_length=20)),
                ('os_name', models.CharField(blank=True, max_length=50)),
                ('browser_name', models.CharField(blank=True, max_length=50)),
                ('is_suspicious', models.BooleanField(default=False, help_text='Flagged as suspicious session')),
                ('suspicious_reasons', models.JSONField(blank=True, default=list)),
                ('ip_address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sessions', to='security.ipaddress')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='security_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Session',
                'verbose_name_plural': 'User Sessions',
                'ordering': ['-started_at'],
                'indexes': [models.Index(fields=['user', 'started_at'], name='security_us_user_id_78e6a2_idx'), models.Index(fields=['device_fingerprint'], name='security_us_device__92765c_idx'), models.Index(fields=['is_suspicious'], name='security_us_is_susp_549551_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='suspiciousactivity',
            index=models.Index(fields=['user', 'activity_type', 'status'], name='security_su_user_id_924d34_idx'),
        ),
        migrations.AddIndex(
            model_name='suspiciousactivity',
            index=models.Index(fields=['severity_score', 'status'], name='security_su_severit_cd0dde_idx'),
        ),
        migrations.AddIndex(
            model_name='ipaddress',
            index=models.Index(fields=['country_code'], name='security_ip_country_48b11c_idx'),
        ),
        migrations.AddIndex(
            model_name='ipaddress',
            index=models.Index(fields=['is_vpn', 'is_tor', 'is_datacenter'], name='security_ip_is_vpn_cb6b77_idx'),
        ),
        migrations.AddIndex(
            model_name='ipaddress',
            index=models.Index(fields=['risk_score'], name='security_ip_risk_sc_e01b58_idx'),
        ),
        migrations.AddIndex(
            model_name='devicefingerprint',
            index=models.Index(fields=['risk_score'], name='security_de_risk_sc_6f4955_idx'),
        ),
        migrations.AddIndex(
            model_name='devicefingerprint',
            index=models.Index(fields=['total_users'], name='security_de_total_u_28ae30_idx'),
        ),
        migrations.AddIndex(
            model_name='amlcheck',
            index=models.Index(fields=['user', 'status'], name='security_am_user_id_a05674_idx'),
        ),
        migrations.AddIndex(
            model_name='amlcheck',
            index=models.Index(fields=['risk_score', 'status'], name='security_am_risk_sc_0989af_idx'),
        ),
    ]
