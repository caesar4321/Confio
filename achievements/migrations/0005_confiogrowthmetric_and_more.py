# Generated by Django 4.2.20 on 2025-07-29 20:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('achievements', '0004_confiorewardbalance_daily_reward_amount_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConfioGrowthMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('active_users', 'Usuarios Activos'), ('protected_savings', 'Ahorros Protegidos'), ('daily_transactions', 'Transacciones Diarias'), ('monthly_volume', 'Volumen Mensual'), ('venezuelan_states', 'Estados de Venezuela')], help_text='Type of metric being tracked', max_length=30, unique=True)),
                ('display_name', models.CharField(help_text='Display name for this metric', max_length=100)),
                ('current_value', models.CharField(help_text="Current value (e.g., '8K+', '$1.2M cUSD')", max_length=50)),
                ('growth_percentage', models.CharField(help_text="Growth percentage (e.g., '+25%')", max_length=20)),
                ('display_order', models.PositiveIntegerField(default=0, help_text='Order to display this metric')),
                ('is_active', models.BooleanField(default=True, help_text='Whether to show this metric in the app')),
                ('last_updated', models.DateTimeField(auto_now=True, help_text='When this metric was last updated')),
            ],
            options={
                'verbose_name': 'CONFIO Growth Metric',
                'verbose_name_plural': 'CONFIO Growth Metrics',
                'ordering': ['display_order', 'metric_type'],
            },
        ),
        migrations.AlterModelOptions(
            name='influencerambassador',
            options={'ordering': ['-confio_earned', '-total_referrals'], 'verbose_name': 'Influencer Ambassador', 'verbose_name_plural': 'Influencer Ambassadors'},
        ),
        migrations.RemoveIndex(
            model_name='influencerreferral',
            name='achievement_referre_9b03e5_idx',
        ),
        migrations.RemoveIndex(
            model_name='influencerreferral',
            name='achievement_referre_f4c504_idx',
        ),
        migrations.RemoveField(
            model_name='influencerambassador',
            name='assigned_manager',
        ),
        migrations.RemoveField(
            model_name='influencerambassador',
            name='notes',
        ),
        migrations.RemoveField(
            model_name='influencerambassador',
            name='referrer_identifier',
        ),
        migrations.RemoveField(
            model_name='influencerambassador',
            name='tier_progress',
        ),
        migrations.AddField(
            model_name='ambassadoractivity',
            name='points_earned',
            field=models.PositiveIntegerField(default=0, help_text='Points earned for this activity'),
        ),
        migrations.AlterField(
            model_name='achievementtype',
            name='category',
            field=models.CharField(choices=[('onboarding', 'Onboarding'), ('trading', 'Trading'), ('payments', 'Payments'), ('social', 'Social'), ('verification', 'Verification'), ('ambassador', 'Ambassador')], help_text='Category this achievement belongs to', max_length=20),
        ),
        migrations.AlterField(
            model_name='achievementtype',
            name='color',
            field=models.CharField(default='#FFD700', help_text='Color for this achievement (hex code)', max_length=20),
        ),
        migrations.AlterField(
            model_name='achievementtype',
            name='confio_reward',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Amount of CONFIO tokens to reward', max_digits=10),
        ),
        migrations.AlterField(
            model_name='achievementtype',
            name='description',
            field=models.TextField(help_text='Description of what the user needs to do'),
        ),
        migrations.AlterField(
            model_name='achievementtype',
            name='display_order',
            field=models.PositiveIntegerField(default=0, help_text='Order to display this achievement'),
        ),
        migrations.AlterField(
            model_name='achievementtype',
            name='icon_emoji',
            field=models.CharField(blank=True, help_text='Emoji icon for this achievement', max_length=10, null=True),
        ),
        migrations.AlterField(
            model_name='achievementtype',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Whether this achievement is currently active'),
        ),
        migrations.AlterField(
            model_name='achievementtype',
            name='requires_manual_review',
            field=models.BooleanField(default=False, help_text='Whether this achievement requires manual admin review'),
        ),
        migrations.AlterField(
            model_name='achievementtype',
            name='slug',
            field=models.CharField(help_text='Unique identifier for this achievement type', max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name='ambassadoractivity',
            name='activity_type',
            field=models.CharField(choices=[('referral', 'Referido'), ('viral_content', 'Contenido Viral'), ('community_engagement', 'Participación Comunitaria'), ('event_participation', 'Participación en Eventos'), ('milestone_achieved', 'Hito Alcanzado')], max_length=30),
        ),
        migrations.AlterField(
            model_name='ambassadoractivity',
            name='confio_earned',
            field=models.DecimalField(decimal_places=2, default=0, help_text='CONFIO earned for this activity', max_digits=10),
        ),
        migrations.AlterField(
            model_name='ambassadoractivity',
            name='metadata',
            field=models.JSONField(blank=True, default=dict, help_text='Additional activity metadata'),
        ),
        migrations.AlterField(
            model_name='confiorewardtransaction',
            name='balance_after',
            field=models.DecimalField(decimal_places=2, help_text="User's total balance after this transaction", max_digits=20),
        ),
        migrations.AlterField(
            model_name='confiorewardtransaction',
            name='description',
            field=models.TextField(help_text='Human-readable description of this transaction'),
        ),
        migrations.AlterField(
            model_name='confiorewardtransaction',
            name='reference_id',
            field=models.CharField(help_text='ID of the record that caused this transaction', max_length=50),
        ),
        migrations.AlterField(
            model_name='confiorewardtransaction',
            name='reference_type',
            field=models.CharField(help_text='Type of action that caused this transaction', max_length=50),
        ),
        migrations.AlterField(
            model_name='influencerambassador',
            name='active_referrals',
            field=models.PositiveIntegerField(default=0, help_text='Number of currently active referrals'),
        ),
        migrations.AlterField(
            model_name='influencerambassador',
            name='confio_earned',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Total CONFIO earned as ambassador', max_digits=20),
        ),
        migrations.AlterField(
            model_name='influencerambassador',
            name='custom_referral_code',
            field=models.CharField(blank=True, help_text='Custom referral code for this ambassador', max_length=20, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='influencerambassador',
            name='dedicatedSupport',
            field=models.BooleanField(default=False, help_text='Has access to dedicated support'),
        ),
        migrations.AlterField(
            model_name='influencerambassador',
            name='has_early_access',
            field=models.BooleanField(default=False, help_text='Has early access to new features'),
        ),
        migrations.AlterField(
            model_name='influencerambassador',
            name='has_exclusive_events',
            field=models.BooleanField(default=False, help_text='Has access to exclusive events'),
        ),
        migrations.AlterField(
            model_name='influencerambassador',
            name='has_monthly_bonus',
            field=models.BooleanField(default=False, help_text='Receives monthly performance bonus'),
        ),
        migrations.AlterField(
            model_name='influencerambassador',
            name='last_activity_at',
            field=models.DateTimeField(auto_now=True, help_text='Last time ambassador was active'),
        ),
        migrations.AlterField(
            model_name='influencerambassador',
            name='monthly_viral_views',
            field=models.PositiveIntegerField(default=0, help_text='Viral views in the current month'),
        ),
        migrations.AlterField(
            model_name='influencerambassador',
            name='performance_score',
            field=models.PositiveIntegerField(default=0, help_text='Overall performance score (0-100)'),
        ),
        migrations.AlterField(
            model_name='influencerambassador',
            name='referral_bonus_multiplier',
            field=models.DecimalField(decimal_places=2, default=1.0, help_text='Multiplier for referral rewards (e.g., 1.5 = 50% bonus)', max_digits=3),
        ),
        migrations.AlterField(
            model_name='influencerambassador',
            name='tier_achieved_at',
            field=models.DateTimeField(auto_now_add=True, help_text='When the current tier was achieved', null=True),
        ),
        migrations.AlterField(
            model_name='influencerambassador',
            name='total_referrals',
            field=models.PositiveIntegerField(default=0, help_text='Total number of referrals made'),
        ),
        migrations.AlterField(
            model_name='influencerreferral',
            name='attribution_data',
            field=models.JSONField(blank=True, default=dict, help_text='Additional attribution data'),
        ),
        migrations.AlterField(
            model_name='influencerreferral',
            name='first_transaction_at',
            field=models.DateTimeField(blank=True, help_text='When the referred user made their first transaction', null=True),
        ),
        migrations.AlterField(
            model_name='influencerreferral',
            name='influencer_user',
            field=models.ForeignKey(blank=True, help_text='Actual user who made the referral (if registered)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referrals_as_influencer', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='influencerreferral',
            name='referee_confio_awarded',
            field=models.DecimalField(decimal_places=2, default=0, help_text='CONFIO awarded to the referred user', max_digits=10),
        ),
        migrations.AlterField(
            model_name='influencerreferral',
            name='referred_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referrals_as_referred', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='influencerreferral',
            name='referrer_confio_awarded',
            field=models.DecimalField(decimal_places=2, default=0, help_text='CONFIO awarded to the referrer', max_digits=10),
        ),
        migrations.AlterField(
            model_name='influencerreferral',
            name='referrer_identifier',
            field=models.CharField(help_text='Identifier of the referrer (@username, code, etc.)', max_length=50),
        ),
        migrations.AlterField(
            model_name='influencerreferral',
            name='reward_claimed_at',
            field=models.DateTimeField(blank=True, help_text='When the referral reward was claimed', null=True),
        ),
        migrations.AlterField(
            model_name='influencerreferral',
            name='status',
            field=models.CharField(choices=[('active', 'Activo'), ('converted', 'Convertido'), ('inactive', 'Inactivo')], default='active', max_length=20),
        ),
        migrations.AlterField(
            model_name='influencerreferral',
            name='total_transaction_volume',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Total volume of transactions by this user', max_digits=20),
        ),
        migrations.AlterField(
            model_name='tiktokviralshare',
            name='base_confio_reward',
            field=models.DecimalField(decimal_places=2, default=10, help_text='Base CONFIO reward for sharing', max_digits=10),
        ),
        migrations.AlterField(
            model_name='tiktokviralshare',
            name='hashtags_used',
            field=models.JSONField(default=list, help_text='List of hashtags used in the video'),
        ),
        migrations.AlterField(
            model_name='tiktokviralshare',
            name='like_count',
            field=models.PositiveIntegerField(default=0, help_text='Number of likes on the TikTok video'),
        ),
        migrations.AlterField(
            model_name='tiktokviralshare',
            name='share_count',
            field=models.PositiveIntegerField(default=0, help_text='Number of shares of the TikTok video'),
        ),
        migrations.AlterField(
            model_name='tiktokviralshare',
            name='tiktok_username',
            field=models.CharField(help_text='TikTok username of the creator', max_length=50),
        ),
        migrations.AlterField(
            model_name='tiktokviralshare',
            name='verification_notes',
            field=models.TextField(blank=True, help_text='Admin notes about verification'),
        ),
        migrations.AlterField(
            model_name='tiktokviralshare',
            name='verified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_tiktok_shares', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='tiktokviralshare',
            name='view_bonus_confio',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Bonus CONFIO based on view performance', max_digits=10),
        ),
        migrations.AlterField(
            model_name='tiktokviralshare',
            name='view_count',
            field=models.PositiveIntegerField(default=0, help_text='Number of views on the TikTok video'),
        ),
        migrations.AlterUniqueTogether(
            name='influencerreferral',
            unique_together={('referred_user', 'deleted_at')},
        ),
    ]
