# Generated by Django 5.2 on 2025-09-02 02:45

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AchievementType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Soft delete timestamp', null=True)),
                ('slug', models.CharField(help_text='Unique identifier for this achievement type', max_length=50, unique=True)),
                ('name', models.CharField(help_text='Display name for this achievement', max_length=100)),
                ('description', models.TextField(help_text='Description of what the user needs to do')),
                ('category', models.CharField(choices=[('onboarding', 'Onboarding'), ('trading', 'Trading'), ('payments', 'Payments'), ('social', 'Social'), ('verification', 'Verification'), ('ambassador', 'Ambassador')], help_text='Category this achievement belongs to', max_length=20)),
                ('icon_emoji', models.CharField(blank=True, help_text='Emoji icon for this achievement', max_length=10, null=True)),
                ('color', models.CharField(default='#FFD700', help_text='Color for this achievement (hex code)', max_length=20)),
                ('confio_reward', models.DecimalField(decimal_places=2, default=0, help_text='Amount of CONFIO tokens to reward', max_digits=10)),
                ('display_order', models.PositiveIntegerField(default=0, help_text='Order to display this achievement')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this achievement is currently active')),
                ('is_repeatable', models.BooleanField(default=False, help_text='Whether users can earn this achievement multiple times')),
                ('requires_manual_review', models.BooleanField(default=False, help_text='Whether this achievement requires manual admin review')),
            ],
            options={
                'verbose_name': 'Achievement Type',
                'verbose_name_plural': 'Achievement Types',
                'ordering': ['category', 'display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AmbassadorActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Soft delete timestamp', null=True)),
                ('activity_type', models.CharField(choices=[('referral', 'Referido'), ('viral_content', 'Contenido Viral'), ('community_engagement', 'Participación Comunitaria'), ('event_participation', 'Participación en Eventos'), ('milestone_achieved', 'Hito Alcanzado')], max_length=30)),
                ('description', models.TextField()),
                ('points_earned', models.PositiveIntegerField(default=0, help_text='Points earned for this activity')),
                ('confio_earned', models.DecimalField(decimal_places=2, default=0, help_text='CONFIO earned for this activity', max_digits=10)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional activity metadata')),
            ],
            options={
                'verbose_name': 'Ambassador Activity',
                'verbose_name_plural': 'Ambassador Activities',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ConfioGrowthMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('active_users', 'Usuarios Activos'), ('protected_savings', 'Ahorros Protegidos'), ('daily_transactions', 'Transacciones Diarias'), ('monthly_volume', 'Volumen Mensual'), ('venezuelan_states', 'Estados de Venezuela')], help_text='Type of metric being tracked', max_length=30, unique=True)),
                ('display_name', models.CharField(help_text='Display name for this metric', max_length=100)),
                ('current_value', models.CharField(help_text="Current value (e.g., '8K+', '$1.2M cUSD')", max_length=50)),
                ('growth_percentage', models.CharField(help_text="Growth percentage (e.g., '+25%')", max_length=20)),
                ('display_order', models.PositiveIntegerField(default=0, help_text='Order to display this metric')),
                ('is_active', models.BooleanField(default=True, help_text='Whether to show this metric in the app')),
                ('last_updated', models.DateTimeField(auto_now=True, help_text='When this metric was last updated')),
            ],
            options={
                'verbose_name': 'CONFIO Growth Metric',
                'verbose_name_plural': 'CONFIO Growth Metrics',
                'ordering': ['display_order', 'metric_type'],
            },
        ),
        migrations.CreateModel(
            name='ConfioRewardBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Soft delete timestamp', null=True)),
                ('total_earned', models.DecimalField(decimal_places=2, default=0, help_text='Total CONFIO ever earned', max_digits=20)),
                ('total_locked', models.DecimalField(decimal_places=2, default=0, help_text='Currently locked CONFIO', max_digits=20)),
                ('total_unlocked', models.DecimalField(decimal_places=2, default=0, help_text='Unlocked CONFIO (available for use)', max_digits=20)),
                ('total_spent', models.DecimalField(decimal_places=2, default=0, help_text='Total CONFIO spent or transferred', max_digits=20)),
                ('next_unlock_date', models.DateTimeField(blank=True, help_text='Next scheduled unlock date', null=True)),
                ('next_unlock_amount', models.DecimalField(decimal_places=2, default=0, help_text='Amount to unlock on next date', max_digits=10)),
                ('last_reward_at', models.DateTimeField(blank=True, help_text='Last time user received a reward', null=True)),
                ('daily_reward_count', models.PositiveIntegerField(default=0, help_text='Number of rewards claimed today')),
                ('daily_reward_amount', models.DecimalField(decimal_places=2, default=0, help_text='Total CONFIO claimed today', max_digits=10)),
            ],
            options={
                'verbose_name': 'CONFIO Balance',
                'verbose_name_plural': 'CONFIO Balances',
            },
        ),
        migrations.CreateModel(
            name='ConfioRewardTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Soft delete timestamp', null=True)),
                ('transaction_type', models.CharField(choices=[('earned', 'Ganado'), ('unlocked', 'Desbloqueado'), ('spent', 'Gastado'), ('transferred', 'Transferido'), ('adjusted', 'Ajustado')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Amount of CONFIO in this transaction', max_digits=10)),
                ('balance_after', models.DecimalField(decimal_places=2, help_text="User's total balance after this transaction", max_digits=20)),
                ('reference_type', models.CharField(help_text='Type of action that caused this transaction', max_length=50)),
                ('reference_id', models.CharField(help_text='ID of the record that caused this transaction', max_length=50)),
                ('description', models.TextField(help_text='Human-readable description of this transaction')),
            ],
            options={
                'verbose_name': 'CONFIO Transaction',
                'verbose_name_plural': 'CONFIO Transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InfluencerAmbassador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Soft delete timestamp', null=True)),
                ('tier', models.CharField(choices=[('bronze', 'Bronce'), ('silver', 'Plata'), ('gold', 'Oro'), ('diamond', 'Diamante')], default='bronze', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Activo'), ('paused', 'Pausado'), ('terminated', 'Terminado')], default='active', max_length=20)),
                ('total_referrals', models.PositiveIntegerField(default=0, help_text='Total number of referrals made')),
                ('active_referrals', models.PositiveIntegerField(default=0, help_text='Number of currently active referrals')),
                ('total_viral_views', models.PositiveBigIntegerField(default=0, help_text='Total views across all viral content')),
                ('monthly_viral_views', models.PositiveIntegerField(default=0, help_text='Viral views in the current month')),
                ('referral_transaction_volume', models.DecimalField(decimal_places=2, default=0, help_text='Total transaction volume from referrals', max_digits=20)),
                ('confio_earned', models.DecimalField(decimal_places=2, default=0, help_text='Total CONFIO earned as ambassador', max_digits=20)),
                ('referral_bonus_multiplier', models.DecimalField(decimal_places=2, default=1.0, help_text='Multiplier for referral rewards (e.g., 1.5 = 50% bonus)', max_digits=3)),
                ('viral_bonus_multiplier', models.DecimalField(decimal_places=2, default=1.0, help_text='Multiplier for viral content rewards', max_digits=3)),
                ('custom_referral_code', models.CharField(blank=True, help_text='Custom referral code for this ambassador', max_length=20, null=True, unique=True)),
                ('tier_achieved_at', models.DateTimeField(auto_now_add=True, help_text='When the current tier was achieved', null=True)),
                ('performance_score', models.PositiveIntegerField(default=0, help_text='Overall performance score (0-100)')),
                ('has_early_access', models.BooleanField(default=False, help_text='Has early access to new features')),
                ('has_exclusive_events', models.BooleanField(default=False, help_text='Has access to exclusive events')),
                ('has_monthly_bonus', models.BooleanField(default=False, help_text='Receives monthly performance bonus')),
                ('dedicatedSupport', models.BooleanField(default=False, help_text='Has access to dedicated support')),
                ('last_activity_at', models.DateTimeField(auto_now=True, help_text='Last time ambassador was active')),
            ],
            options={
                'verbose_name': 'Influencer Ambassador',
                'verbose_name_plural': 'Influencer Ambassadors',
                'ordering': ['-confio_earned', '-total_referrals'],
            },
        ),
        migrations.CreateModel(
            name='InfluencerReferral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Soft delete timestamp', null=True)),
                ('referrer_identifier', models.CharField(help_text='Identifier of the referrer (@username, code, etc.)', max_length=50)),
                ('status', models.CharField(choices=[('active', 'Activo'), ('converted', 'Convertido'), ('inactive', 'Inactivo')], default='active', max_length=20)),
                ('first_transaction_at', models.DateTimeField(blank=True, help_text='When the referred user made their first transaction', null=True)),
                ('total_transaction_volume', models.DecimalField(decimal_places=2, default=0, help_text='Total volume of transactions by this user', max_digits=20)),
                ('referrer_confio_awarded', models.DecimalField(decimal_places=2, default=0, help_text='CONFIO awarded to the referrer', max_digits=10)),
                ('referee_confio_awarded', models.DecimalField(decimal_places=2, default=0, help_text='CONFIO awarded to the referred user', max_digits=10)),
                ('reward_claimed_at', models.DateTimeField(blank=True, help_text='When the referral reward was claimed', null=True)),
                ('attribution_data', models.JSONField(blank=True, default=dict, help_text='Additional attribution data')),
            ],
            options={
                'verbose_name': 'Influencer Referral',
                'verbose_name_plural': 'Influencer Referrals',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PioneroBetaTracker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(default=0)),
                ('last_user_id', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Pionero Beta Tracker',
                'verbose_name_plural': 'Pionero Beta Tracker',
            },
        ),
        migrations.CreateModel(
            name='TikTokViralShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Soft delete timestamp', null=True)),
                ('tiktok_url', models.URLField(help_text='URL of the TikTok video')),
                ('tiktok_username', models.CharField(help_text='TikTok username of the creator', max_length=50)),
                ('hashtags_used', models.JSONField(default=list, help_text='List of hashtags used in the video')),
                ('share_type', models.CharField(choices=[('achievement', 'Logro'), ('tutorial', 'Tutorial'), ('testimonial', 'Testimonio'), ('creative', 'Creativo')], default='achievement', max_length=20)),
                ('status', models.CharField(choices=[('pending_verification', 'Pendiente de Verificación'), ('verified', 'Verificado'), ('rejected', 'Rechazado'), ('rewarded', 'Recompensado')], default='pending_verification', max_length=30)),
                ('view_count', models.PositiveIntegerField(default=0, help_text='Number of views on the TikTok video')),
                ('like_count', models.PositiveIntegerField(default=0, help_text='Number of likes on the TikTok video')),
                ('share_count', models.PositiveIntegerField(default=0, help_text='Number of shares of the TikTok video')),
                ('base_confio_reward', models.DecimalField(decimal_places=2, default=10, help_text='Base CONFIO reward for sharing', max_digits=10)),
                ('view_bonus_confio', models.DecimalField(decimal_places=2, default=0, help_text='Bonus CONFIO based on view performance', max_digits=10)),
                ('total_confio_awarded', models.DecimalField(decimal_places=2, default=0, help_text='Total CONFIO awarded for this share', max_digits=10)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('verification_notes', models.TextField(blank=True, help_text='Admin notes about verification')),
            ],
            options={
                'verbose_name': 'TikTok Viral Share',
                'verbose_name_plural': 'TikTok Viral Shares',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Soft delete timestamp', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('earned', 'Ganado'), ('claimed', 'Reclamado'), ('expired', 'Expirado')], default='pending', max_length=20)),
                ('progress_data', models.JSONField(blank=True, default=dict, help_text='JSON data tracking progress towards this achievement')),
                ('earned_at', models.DateTimeField(blank=True, help_text='When the achievement was earned', null=True)),
                ('claimed_at', models.DateTimeField(blank=True, help_text='When the reward was claimed', null=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='When the achievement expires (if applicable)', null=True)),
                ('earned_value', models.DecimalField(blank=True, decimal_places=2, help_text='Actual value earned (for variable rewards)', max_digits=10, null=True)),
                ('device_fingerprint_hash', models.CharField(blank=True, help_text='Hash of device fingerprint when achievement was earned', max_length=64, null=True)),
                ('claim_ip_address', models.GenericIPAddressField(blank=True, help_text='IP address when achievement was earned', null=True)),
                ('security_metadata', models.JSONField(blank=True, default=dict, help_text='Additional security metadata for fraud detection')),
            ],
            options={
                'verbose_name': 'User Achievement',
                'verbose_name_plural': 'User Achievements',
                'ordering': ['-earned_at', '-created_at'],
            },
        ),
    ]
