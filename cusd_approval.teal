#pragma version 8
intcblock 0 1 4 1000000
bytecblock 0x69735f706175736564 0x 0x61646d696e 0x69735f66726f7a656e 0x637573645f61737365745f6964 0x637573645f63697263756c6174696e675f737570706c79 0x636f6c6c61746572616c5f726174696f 0x7462696c6c735f6261636b65645f737570706c79 0x746f74616c5f757364635f6c6f636b6564 0x746f74616c5f6d696e746564 0x746f74616c5f6275726e6564 0x151f7c75 0x757364635f61737365745f6964 0x69735f7661756c74 0x3a 0x00
txna ApplicationArgs 0
pushbytes 0x4c5c61ba // "create()void"
==
bnz main_l44
txna ApplicationArgs 0
pushbytes 0x990af164 // "setup_assets(uint64,uint64)void"
==
bnz main_l43
txna ApplicationArgs 0
pushbytes 0x0178f94b // "pause()void"
==
bnz main_l42
txna ApplicationArgs 0
pushbytes 0x1b529de8 // "unpause()void"
==
bnz main_l41
txna ApplicationArgs 0
pushbytes 0x30c6d58a // "opt_in()void"
==
bnz main_l40
txna ApplicationArgs 0
pushbytes 0xfa1a6553 // "add_vault(address)void"
==
bnz main_l39
txna ApplicationArgs 0
pushbytes 0x8c1469e0 // "remove_vault(address)void"
==
bnz main_l38
txna ApplicationArgs 0
pushbytes 0x8153e58f // "freeze_address(address)void"
==
bnz main_l37
txna ApplicationArgs 0
pushbytes 0x6bd40555 // "unfreeze_address(address)void"
==
bnz main_l36
txna ApplicationArgs 0
pushbytes 0x5012fea2 // "mint_admin(uint64,address)void"
==
bnz main_l35
txna ApplicationArgs 0
pushbytes 0xf461c019 // "burn_admin(uint64)void"
==
bnz main_l34
txna ApplicationArgs 0
pushbytes 0x4266b1a6 // "mint_with_collateral()void"
==
bnz main_l33
txna ApplicationArgs 0
pushbytes 0x5ae1c528 // "burn_for_collateral()void"
==
bnz main_l32
txna ApplicationArgs 0
pushbytes 0x4fea9c05 // "transfer_cusd(axfer,address)void"
==
bnz main_l31
txna ApplicationArgs 0
pushbytes 0x4a165ee7 // "update_admin(address)void"
==
bnz main_l30
txna ApplicationArgs 0
pushbytes 0xaec80f9b // "update_collateral_ratio(uint64)void"
==
bnz main_l29
txna ApplicationArgs 0
pushbytes 0xe67daf51 // "get_stats()(uint64,uint64)"
==
bnz main_l28
txna ApplicationArgs 0
pushbytes 0x3b188e0a // "get_reserves()(uint64,uint64,uint64,uint64,uint64)"
==
bnz main_l27
txna ApplicationArgs 0
pushbytes 0x421883e7 // "verify_backing()bool"
==
bnz main_l26
txna ApplicationArgs 0
pushbytes 0xc3f597cc // "is_frozen(address)bool"
==
bnz main_l25
txna ApplicationArgs 0
pushbytes 0x4ed50852 // "is_vault(address)bool"
==
bnz main_l24
txna ApplicationArgs 0
pushbytes 0x24378d3c // "delete()void"
==
bnz main_l23
err
main_l23:
txn OnCompletion
pushint 5 // DeleteApplication
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub deletecaster_43
intc_1 // 1
return
main_l24:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub isvaultcaster_42
intc_1 // 1
return
main_l25:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub isfrozencaster_41
intc_1 // 1
return
main_l26:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub verifybackingcaster_40
intc_1 // 1
return
main_l27:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub getreservescaster_39
intc_1 // 1
return
main_l28:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub getstatscaster_38
intc_1 // 1
return
main_l29:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub updatecollateralratiocaster_37
intc_1 // 1
return
main_l30:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub updateadmincaster_36
intc_1 // 1
return
main_l31:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub transfercusdcaster_35
intc_1 // 1
return
main_l32:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub burnforcollateralcaster_34
intc_1 // 1
return
main_l33:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub mintwithcollateralcaster_33
intc_1 // 1
return
main_l34:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub burnadmincaster_32
intc_1 // 1
return
main_l35:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub mintadmincaster_31
intc_1 // 1
return
main_l36:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub unfreezeaddresscaster_30
intc_1 // 1
return
main_l37:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub freezeaddresscaster_29
intc_1 // 1
return
main_l38:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub removevaultcaster_28
intc_1 // 1
return
main_l39:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub addvaultcaster_27
intc_1 // 1
return
main_l40:
txn OnCompletion
intc_1 // OptIn
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub optincaster_26
intc_1 // 1
return
main_l41:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub unpausecaster_25
intc_1 // 1
return
main_l42:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub pausecaster_24
intc_1 // 1
return
main_l43:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub setupassetscaster_23
intc_1 // 1
return
main_l44:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
==
&&
assert
callsub createcaster_22
intc_1 // 1
return

// create
create_0:
proto 0 0
bytec_2 // "admin"
txn Sender
app_global_put
bytec_0 // "is_paused"
intc_0 // 0
app_global_put
bytec 6 // "collateral_ratio"
intc_3 // 1000000
app_global_put
intc_1 // 1
return

// setup_assets
setupassets_1:
proto 2 0
txn Sender
bytec_2 // "admin"
app_global_get
==
assert
bytec 4 // "cusd_asset_id"
app_global_get
intc_0 // 0
==
assert
bytec 4 // "cusd_asset_id"
frame_dig -2
app_global_put
bytec 12 // "usdc_asset_id"
frame_dig -1
app_global_put
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
frame_dig -1
itxn_field XferAsset
global CurrentApplicationAddress
itxn_field AssetReceiver
intc_0 // 0
itxn_field AssetAmount
itxn_submit
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
frame_dig -2
itxn_field XferAsset
global CurrentApplicationAddress
itxn_field AssetReceiver
intc_0 // 0
itxn_field AssetAmount
itxn_submit
intc_1 // 1
return

// pause
pause_2:
proto 0 0
txn Sender
bytec_2 // "admin"
app_global_get
==
bytec_0 // "is_paused"
app_global_get
intc_0 // 0
==
&&
assert
bytec_0 // "is_paused"
intc_1 // 1
app_global_put
intc_1 // 1
return

// unpause
unpause_3:
proto 0 0
txn Sender
bytec_2 // "admin"
app_global_get
==
bytec_0 // "is_paused"
app_global_get
intc_1 // 1
==
&&
assert
bytec_0 // "is_paused"
intc_0 // 0
app_global_put
intc_1 // 1
return

// opt_in
optin_4:
proto 0 0
txn Sender
bytec_3 // "is_frozen"
intc_0 // 0
app_local_put
txn Sender
bytec 13 // "is_vault"
intc_0 // 0
app_local_put
intc_1 // 1
return

// add_vault
addvault_5:
proto 1 0
txn Sender
bytec_2 // "admin"
app_global_get
==
bytec_0 // "is_paused"
app_global_get
intc_0 // 0
==
&&
assert
frame_dig -1
bytec 13 // "is_vault"
intc_1 // 1
app_local_put
intc_1 // 1
return

// remove_vault
removevault_6:
proto 1 0
txn Sender
bytec_2 // "admin"
app_global_get
==
bytec_0 // "is_paused"
app_global_get
intc_0 // 0
==
&&
assert
frame_dig -1
bytec 13 // "is_vault"
intc_0 // 0
app_local_put
intc_1 // 1
return

// freeze_address
freezeaddress_7:
proto 1 0
txn Sender
bytec_2 // "admin"
app_global_get
==
bytec_0 // "is_paused"
app_global_get
intc_0 // 0
==
&&
assert
frame_dig -1
bytec_3 // "is_frozen"
intc_1 // 1
app_local_put
intc_1 // 1
return

// unfreeze_address
unfreezeaddress_8:
proto 1 0
txn Sender
bytec_2 // "admin"
app_global_get
==
bytec_0 // "is_paused"
app_global_get
intc_0 // 0
==
&&
assert
frame_dig -1
bytec_3 // "is_frozen"
intc_0 // 0
app_local_put
intc_1 // 1
return

// mint_admin
mintadmin_9:
proto 2 0
txn Sender
bytec_2 // "admin"
app_global_get
==
assert
bytec_0 // "is_paused"
app_global_get
intc_0 // 0
==
assert
frame_dig -1
bytec_3 // "is_frozen"
app_local_get
intc_0 // 0
==
assert
frame_dig -2
intc_0 // 0
>
assert
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
bytec 4 // "cusd_asset_id"
app_global_get
itxn_field XferAsset
frame_dig -2
itxn_field AssetAmount
frame_dig -1
itxn_field AssetReceiver
global CurrentApplicationAddress
itxn_field AssetSender
itxn_submit
bytec 9 // "total_minted"
bytec 9 // "total_minted"
app_global_get
frame_dig -2
+
app_global_put
bytec 7 // "tbills_backed_supply"
bytec 7 // "tbills_backed_supply"
app_global_get
frame_dig -2
+
app_global_put
pushbytes 0x61646d696e5f6d696e743a // "admin_mint:"
frame_dig -2
itob
concat
bytec 14 // ":"
concat
frame_dig -1
concat
log
intc_1 // 1
return

// burn_admin
burnadmin_10:
proto 1 0
txn Sender
bytec_2 // "admin"
app_global_get
==
assert
bytec_0 // "is_paused"
app_global_get
intc_0 // 0
==
assert
global GroupSize
pushint 2 // 2
==
assert
txn GroupIndex
intc_1 // 1
==
assert
gtxn 0 TypeEnum
intc_2 // axfer
==
assert
gtxn 0 XferAsset
bytec 4 // "cusd_asset_id"
app_global_get
==
assert
gtxn 0 AssetReceiver
global CurrentApplicationAddress
==
assert
gtxn 0 AssetAmount
frame_dig -1
==
assert
bytec 10 // "total_burned"
bytec 10 // "total_burned"
app_global_get
frame_dig -1
+
app_global_put
bytec 7 // "tbills_backed_supply"
bytec 7 // "tbills_backed_supply"
app_global_get
frame_dig -1
-
app_global_put
pushbytes 0x61646d696e5f6275726e3a // "admin_burn:"
frame_dig -1
itob
concat
log
intc_1 // 1
return

// mint_with_collateral
mintwithcollateral_11:
proto 0 0
bytec_0 // "is_paused"
app_global_get
intc_0 // 0
==
assert
global GroupSize
pushint 2 // 2
==
assert
txn GroupIndex
intc_1 // 1
==
assert
gtxn 0 TypeEnum
intc_2 // axfer
==
assert
gtxn 0 XferAsset
bytec 12 // "usdc_asset_id"
app_global_get
==
assert
gtxn 0 AssetReceiver
global CurrentApplicationAddress
==
assert
gtxn 0 AssetAmount
intc_0 // 0
>
assert
gtxn 0 Sender
bytec_3 // "is_frozen"
app_local_get
intc_0 // 0
==
assert
gtxn 0 AssetAmount
store 0
load 0
intc_3 // 1000000
*
bytec 6 // "collateral_ratio"
app_global_get
/
store 1
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
bytec 4 // "cusd_asset_id"
app_global_get
itxn_field XferAsset
load 1
itxn_field AssetAmount
gtxn 0 Sender
itxn_field AssetReceiver
global CurrentApplicationAddress
itxn_field AssetSender
itxn_submit
bytec 8 // "total_usdc_locked"
bytec 8 // "total_usdc_locked"
app_global_get
load 0
+
app_global_put
bytec 9 // "total_minted"
bytec 9 // "total_minted"
app_global_get
load 1
+
app_global_put
bytec 5 // "cusd_circulating_supply"
bytec 5 // "cusd_circulating_supply"
app_global_get
load 1
+
app_global_put
pushbytes 0x6d696e743a // "mint:"
load 1
itob
concat
bytec 14 // ":"
concat
gtxn 0 Sender
concat
log
intc_1 // 1
return

// burn_for_collateral
burnforcollateral_12:
proto 0 0
bytec_0 // "is_paused"
app_global_get
intc_0 // 0
==
assert
global GroupSize
pushint 2 // 2
==
assert
txn GroupIndex
intc_1 // 1
==
assert
gtxn 0 TypeEnum
intc_2 // axfer
==
assert
gtxn 0 XferAsset
bytec 4 // "cusd_asset_id"
app_global_get
==
assert
gtxn 0 AssetReceiver
global CurrentApplicationAddress
==
assert
gtxn 0 AssetAmount
intc_0 // 0
>
assert
gtxn 0 Sender
bytec_3 // "is_frozen"
app_local_get
intc_0 // 0
==
assert
gtxn 0 AssetAmount
store 2
load 2
bytec 6 // "collateral_ratio"
app_global_get
*
intc_3 // 1000000
/
store 3
global CurrentApplicationAddress
bytec 12 // "usdc_asset_id"
app_global_get
asset_holding_get AssetBalance
store 5
store 4
load 5
assert
load 4
load 3
>=
assert
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
bytec 12 // "usdc_asset_id"
app_global_get
itxn_field XferAsset
load 3
itxn_field AssetAmount
gtxn 0 Sender
itxn_field AssetReceiver
itxn_submit
bytec 8 // "total_usdc_locked"
bytec 8 // "total_usdc_locked"
app_global_get
load 3
-
app_global_put
bytec 10 // "total_burned"
bytec 10 // "total_burned"
app_global_get
load 2
+
app_global_put
bytec 5 // "cusd_circulating_supply"
bytec 5 // "cusd_circulating_supply"
app_global_get
load 2
-
app_global_put
pushbytes 0x6275726e3a // "burn:"
load 2
itob
concat
bytec 14 // ":"
concat
gtxn 0 Sender
concat
log
intc_1 // 1
return

// transfer_cusd
transfercusd_13:
proto 2 0
frame_dig -2
gtxns XferAsset
bytec 4 // "cusd_asset_id"
app_global_get
==
frame_dig -2
gtxns AssetReceiver
frame_dig -1
==
&&
bytec_0 // "is_paused"
app_global_get
intc_0 // 0
==
&&
frame_dig -2
gtxns Sender
bytec_3 // "is_frozen"
app_local_get
intc_0 // 0
==
&&
frame_dig -1
bytec_3 // "is_frozen"
app_local_get
intc_0 // 0
==
&&
assert
intc_1 // 1
return

// update_admin
updateadmin_14:
proto 1 0
txn Sender
bytec_2 // "admin"
app_global_get
==
assert
bytec_2 // "admin"
frame_dig -1
app_global_put
pushbytes 0x61646d696e5f6368616e6765643a // "admin_changed:"
frame_dig -1
concat
log
intc_1 // 1
return

// update_collateral_ratio
updatecollateralratio_15:
proto 1 0
txn Sender
bytec_2 // "admin"
app_global_get
==
assert
bytec_0 // "is_paused"
app_global_get
intc_0 // 0
==
assert
frame_dig -1
intc_3 // 1000000
>=
assert
frame_dig -1
pushint 2000000 // 2000000
<=
assert
bytec 6 // "collateral_ratio"
frame_dig -1
app_global_put
pushbytes 0x726174696f3a // "ratio:"
frame_dig -1
itob
concat
log
intc_1 // 1
return

// get_stats
getstats_16:
proto 0 1
bytec_1 // ""
intc_0 // 0
dupn 3
bytec_1 // ""
dup
bytec 9 // "total_minted"
app_global_get
frame_bury 1
bytec 10 // "total_burned"
app_global_get
frame_bury 2
frame_dig 1
itob
frame_dig 2
itob
concat
frame_bury 0
retsub

// get_reserves
getreserves_17:
proto 0 1
bytec_1 // ""
intc_0 // 0
dupn 6
bytec_1 // ""
dup
bytec 8 // "total_usdc_locked"
app_global_get
frame_bury 1
bytec 5 // "cusd_circulating_supply"
app_global_get
frame_bury 2
bytec 7 // "tbills_backed_supply"
app_global_get
frame_bury 3
bytec 6 // "collateral_ratio"
app_global_get
frame_bury 4
bytec 5 // "cusd_circulating_supply"
app_global_get
bytec 7 // "tbills_backed_supply"
app_global_get
+
frame_bury 5
frame_dig 1
itob
frame_dig 2
itob
concat
frame_dig 3
itob
concat
frame_dig 4
itob
concat
frame_dig 5
itob
concat
frame_bury 0
retsub

// verify_backing
verifybacking_18:
proto 0 1
intc_0 // 0
dup
bytec 8 // "total_usdc_locked"
app_global_get
bytec 5 // "cusd_circulating_supply"
app_global_get
bytec 6 // "collateral_ratio"
app_global_get
*
intc_3 // 1000000
/
>=
!
!
frame_bury 1
frame_dig 1
frame_bury 0
retsub

// is_frozen
isfrozen_19:
proto 1 1
intc_0 // 0
frame_dig -1
bytec_3 // "is_frozen"
app_local_get
intc_1 // 1
==
!
!
frame_bury 0
retsub

// is_vault
isvault_20:
proto 1 1
intc_0 // 0
frame_dig -1
bytec 13 // "is_vault"
app_local_get
intc_1 // 1
==
!
!
frame_bury 0
retsub

// delete
delete_21:
proto 0 0
txn Sender
bytec_2 // "admin"
app_global_get
==
assert
intc_1 // 1
return

// create_caster
createcaster_22:
proto 0 0
callsub create_0
retsub

// setup_assets_caster
setupassetscaster_23:
proto 0 0
intc_0 // 0
dup
txna ApplicationArgs 1
btoi
frame_bury 0
txna ApplicationArgs 2
btoi
frame_bury 1
frame_dig 0
frame_dig 1
callsub setupassets_1
retsub

// pause_caster
pausecaster_24:
proto 0 0
callsub pause_2
retsub

// unpause_caster
unpausecaster_25:
proto 0 0
callsub unpause_3
retsub

// opt_in_caster
optincaster_26:
proto 0 0
callsub optin_4
retsub

// add_vault_caster
addvaultcaster_27:
proto 0 0
bytec_1 // ""
txna ApplicationArgs 1
frame_bury 0
frame_dig 0
callsub addvault_5
retsub

// remove_vault_caster
removevaultcaster_28:
proto 0 0
bytec_1 // ""
txna ApplicationArgs 1
frame_bury 0
frame_dig 0
callsub removevault_6
retsub

// freeze_address_caster
freezeaddresscaster_29:
proto 0 0
bytec_1 // ""
txna ApplicationArgs 1
frame_bury 0
frame_dig 0
callsub freezeaddress_7
retsub

// unfreeze_address_caster
unfreezeaddresscaster_30:
proto 0 0
bytec_1 // ""
txna ApplicationArgs 1
frame_bury 0
frame_dig 0
callsub unfreezeaddress_8
retsub

// mint_admin_caster
mintadmincaster_31:
proto 0 0
intc_0 // 0
bytec_1 // ""
txna ApplicationArgs 1
btoi
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
frame_dig 0
frame_dig 1
callsub mintadmin_9
retsub

// burn_admin_caster
burnadmincaster_32:
proto 0 0
intc_0 // 0
txna ApplicationArgs 1
btoi
frame_bury 0
frame_dig 0
callsub burnadmin_10
retsub

// mint_with_collateral_caster
mintwithcollateralcaster_33:
proto 0 0
callsub mintwithcollateral_11
retsub

// burn_for_collateral_caster
burnforcollateralcaster_34:
proto 0 0
callsub burnforcollateral_12
retsub

// transfer_cusd_caster
transfercusdcaster_35:
proto 0 0
intc_0 // 0
bytec_1 // ""
txna ApplicationArgs 1
frame_bury 1
txn GroupIndex
intc_1 // 1
-
frame_bury 0
frame_dig 0
gtxns TypeEnum
intc_2 // axfer
==
assert
frame_dig 0
frame_dig 1
callsub transfercusd_13
retsub

// update_admin_caster
updateadmincaster_36:
proto 0 0
bytec_1 // ""
txna ApplicationArgs 1
frame_bury 0
frame_dig 0
callsub updateadmin_14
retsub

// update_collateral_ratio_caster
updatecollateralratiocaster_37:
proto 0 0
intc_0 // 0
txna ApplicationArgs 1
btoi
frame_bury 0
frame_dig 0
callsub updatecollateralratio_15
retsub

// get_stats_caster
getstatscaster_38:
proto 0 0
bytec_1 // ""
callsub getstats_16
frame_bury 0
bytec 11 // 0x151f7c75
frame_dig 0
concat
log
retsub

// get_reserves_caster
getreservescaster_39:
proto 0 0
bytec_1 // ""
callsub getreserves_17
frame_bury 0
bytec 11 // 0x151f7c75
frame_dig 0
concat
log
retsub

// verify_backing_caster
verifybackingcaster_40:
proto 0 0
intc_0 // 0
callsub verifybacking_18
frame_bury 0
bytec 11 // 0x151f7c75
bytec 15 // 0x00
intc_0 // 0
frame_dig 0
setbit
concat
log
retsub

// is_frozen_caster
isfrozencaster_41:
proto 0 0
intc_0 // 0
bytec_1 // ""
txna ApplicationArgs 1
frame_bury 1
frame_dig 1
callsub isfrozen_19
frame_bury 0
bytec 11 // 0x151f7c75
bytec 15 // 0x00
intc_0 // 0
frame_dig 0
setbit
concat
log
retsub

// is_vault_caster
isvaultcaster_42:
proto 0 0
intc_0 // 0
bytec_1 // ""
txna ApplicationArgs 1
frame_bury 1
frame_dig 1
callsub isvault_20
frame_bury 0
bytec 11 // 0x151f7c75
bytec 15 // 0x00
intc_0 // 0
frame_dig 0
setbit
concat
log
retsub

// delete_caster
deletecaster_43:
proto 0 0
callsub delete_21
retsub