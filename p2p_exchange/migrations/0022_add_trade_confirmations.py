# Generated by Django

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('users', '0009_add_payment_method_fields'),
        ('p2p_exchange', '0021_fix_rating_model_for_two_ratings'),
    ]

    operations = [
        migrations.CreateModel(
            name='P2PTradeConfirmation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                
                # Type of confirmation
                ('confirmation_type', models.CharField(
                    choices=[
                        ('PAYMENT_SENT', 'Payment Sent'),
                        ('PAYMENT_RECEIVED', 'Payment Received'),
                        ('CRYPTO_RELEASED', 'Crypto Released'),
                        ('CRYPTO_RECEIVED', 'Crypto Received'),
                    ],
                    max_length=20
                )),
                
                # Who is confirming - either user or business
                ('confirmer_user', models.ForeignKey(
                    settings.AUTH_USER_MODEL,
                    on_delete=models.CASCADE,
                    related_name='p2p_confirmations',
                    null=True,
                    blank=True
                )),
                ('confirmer_business', models.ForeignKey(
                    'users.Business',
                    on_delete=models.CASCADE,
                    related_name='p2p_confirmations',
                    null=True,
                    blank=True
                )),
                
                # Reference/proof
                ('reference', models.CharField(max_length=200, blank=True)),
                ('notes', models.TextField(blank=True)),
                ('proof_image_url', models.URLField(blank=True)),
                
                # Metadata
                ('ip_address', models.GenericIPAddressField(null=True, blank=True)),
                ('user_agent', models.TextField(blank=True)),
                
                # Trade being confirmed
                ('trade', models.ForeignKey('P2PTrade', on_delete=models.CASCADE, related_name='confirmations')),
            ],
            options={
                'db_table': 'p2p_trade_confirmations',
                'ordering': ['-created_at'],
            },
        ),
        
        # Add unique constraint to prevent duplicate confirmations
        migrations.AddConstraint(
            model_name='p2ptradeconfirmation',
            constraint=models.UniqueConstraint(
                fields=['trade', 'confirmation_type', 'confirmer_user'],
                condition=models.Q(confirmer_user__isnull=False),
                name='unique_user_confirmation'
            ),
        ),
        migrations.AddConstraint(
            model_name='p2ptradeconfirmation',
            constraint=models.UniqueConstraint(
                fields=['trade', 'confirmation_type', 'confirmer_business'],
                condition=models.Q(confirmer_business__isnull=False),
                name='unique_business_confirmation'
            ),
        ),
    ]