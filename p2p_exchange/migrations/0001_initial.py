# Generated by Django 4.2.20 on 2025-07-20 09:22

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='P2PExchange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Soft delete timestamp', null=True)),
                ('exchange_type', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell')], max_length=4)),
                ('token_type', models.CharField(choices=[('cUSD', 'Confío Dollar'), ('CONFIO', 'Confío Token')], max_length=10)),
                ('rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('min_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('max_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('available_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('terms', models.TextField(blank=True)),
                ('response_time_minutes', models.IntegerField(default=15)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('PAUSED', 'Paused'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='ACTIVE', max_length=10)),
                ('auto_complete_enabled', models.BooleanField(default=False)),
                ('auto_complete_time_minutes', models.IntegerField(default=30)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='P2PPaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Soft delete timestamp', null=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('display_name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'ordering': ['display_name'],
            },
        ),
        migrations.CreateModel(
            name='P2PUserStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Soft delete timestamp', null=True)),
                ('total_trades', models.IntegerField(default=0)),
                ('completed_trades', models.IntegerField(default=0)),
                ('cancelled_trades', models.IntegerField(default=0)),
                ('disputed_trades', models.IntegerField(default=0)),
                ('success_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('avg_response_time', models.IntegerField(default=0)),
                ('last_seen_online', models.DateTimeField(auto_now=True)),
                ('total_volume_cusd', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_volume_confio', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_level', models.IntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='p2p_stats', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-success_rate', '-completed_trades'],
            },
        ),
        migrations.CreateModel(
            name='P2PTrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Soft delete timestamp', null=True)),
                ('crypto_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fiat_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('rate_used', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PAYMENT_PENDING', 'Payment Pending'), ('PAYMENT_SENT', 'Payment Sent'), ('PAYMENT_CONFIRMED', 'Payment Confirmed'), ('CRYPTO_RELEASED', 'Crypto Released'), ('COMPLETED', 'Completed'), ('DISPUTED', 'Disputed'), ('CANCELLED', 'Cancelled'), ('EXPIRED', 'Expired')], default='PENDING', max_length=20)),
                ('expires_at', models.DateTimeField()),
                ('payment_reference', models.CharField(blank=True, max_length=200)),
                ('payment_notes', models.TextField(blank=True)),
                ('crypto_transaction_hash', models.CharField(blank=True, max_length=66)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('dispute_reason', models.TextField(blank=True)),
                ('disputed_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='p2p_purchases', to=settings.AUTH_USER_MODEL)),
                ('exchange', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trades', to='p2p_exchange.p2pexchange')),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='p2p_exchange.p2ppaymentmethod')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='p2p_sales', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='P2PMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Soft delete timestamp', null=True)),
                ('message_type', models.CharField(choices=[('TEXT', 'Text'), ('SYSTEM', 'System'), ('PAYMENT_PROOF', 'Payment Proof')], default='TEXT', max_length=15)),
                ('content', models.TextField()),
                ('attachment_url', models.URLField(blank=True)),
                ('attachment_type', models.CharField(blank=True, max_length=50)),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='p2p_messages_sent', to=settings.AUTH_USER_MODEL)),
                ('trade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='p2p_exchange.p2ptrade')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.AddField(
            model_name='p2pexchange',
            name='payment_methods',
            field=models.ManyToManyField(related_name='exchanges', to='p2p_exchange.p2ppaymentmethod'),
        ),
        migrations.AddField(
            model_name='p2pexchange',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='p2p_exchanges', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='P2PEscrow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Soft delete timestamp', null=True)),
                ('escrow_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('token_type', models.CharField(max_length=10)),
                ('escrow_transaction_hash', models.CharField(blank=True, max_length=66)),
                ('release_transaction_hash', models.CharField(blank=True, max_length=66)),
                ('is_escrowed', models.BooleanField(default=False)),
                ('is_released', models.BooleanField(default=False)),
                ('escrowed_at', models.DateTimeField(blank=True, null=True)),
                ('released_at', models.DateTimeField(blank=True, null=True)),
                ('trade', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='escrow', to='p2p_exchange.p2ptrade')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='p2ptrade',
            index=models.Index(fields=['buyer', 'status'], name='p2p_exchang_buyer_i_3df4bc_idx'),
        ),
        migrations.AddIndex(
            model_name='p2ptrade',
            index=models.Index(fields=['seller', 'status'], name='p2p_exchang_seller__81ac54_idx'),
        ),
        migrations.AddIndex(
            model_name='p2ptrade',
            index=models.Index(fields=['status', 'created_at'], name='p2p_exchang_status_54b88b_idx'),
        ),
        migrations.AddIndex(
            model_name='p2ptrade',
            index=models.Index(fields=['expires_at'], name='p2p_exchang_expires_88198e_idx'),
        ),
        migrations.AddIndex(
            model_name='p2pmessage',
            index=models.Index(fields=['trade', 'created_at'], name='p2p_exchang_trade_i_05ad51_idx'),
        ),
        migrations.AddIndex(
            model_name='p2pmessage',
            index=models.Index(fields=['sender', 'is_read'], name='p2p_exchang_sender__5999ce_idx'),
        ),
        migrations.AddIndex(
            model_name='p2pexchange',
            index=models.Index(fields=['exchange_type', 'token_type', 'status'], name='p2p_exchang_exchang_c8a745_idx'),
        ),
        migrations.AddIndex(
            model_name='p2pexchange',
            index=models.Index(fields=['rate'], name='p2p_exchang_rate_d32b7e_idx'),
        ),
        migrations.AddIndex(
            model_name='p2pexchange',
            index=models.Index(fields=['created_at'], name='p2p_exchang_created_881c4c_idx'),
        ),
    ]
