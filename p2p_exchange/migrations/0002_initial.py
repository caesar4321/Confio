# Generated by Django 5.2 on 2025-09-02 02:45

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('p2p_exchange', '0001_initial'),
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='p2pdispute',
            name='initiator_business',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='disputes_initiated', to='users.business'),
        ),
        migrations.AddField(
            model_name='p2pdispute',
            name='initiator_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='disputes_initiated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='p2pdispute',
            name='resolved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='disputes_resolved', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='p2pdisputeevidence',
            name='dispute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evidences', to='p2p_exchange.p2pdispute'),
        ),
        migrations.AddField(
            model_name='p2pdisputeevidence',
            name='uploader_business',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_dispute_evidences', to='users.business'),
        ),
        migrations.AddField(
            model_name='p2pdisputeevidence',
            name='uploader_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_dispute_evidences', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='p2pdisputetransaction',
            name='dispute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='p2p_exchange.p2pdispute'),
        ),
        migrations.AddField(
            model_name='p2pdisputetransaction',
            name='processed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dispute_transactions_processed', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='p2pdisputetransaction',
            name='recipient_business',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dispute_transactions_received', to='users.business'),
        ),
        migrations.AddField(
            model_name='p2pdisputetransaction',
            name='recipient_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dispute_transactions_received', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='p2pescrow',
            name='dispute_resolution',
            field=models.ForeignKey(blank=True, help_text='Link to dispute that resolved this escrow', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='escrow_resolutions', to='p2p_exchange.p2pdispute'),
        ),
        migrations.AddField(
            model_name='p2pfavoritetrader',
            name='favorite_business',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by_users', to='users.business'),
        ),
        migrations.AddField(
            model_name='p2pfavoritetrader',
            name='favorite_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by_users', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='p2pfavoritetrader',
            name='favoriter_business',
            field=models.ForeignKey(blank=True, help_text='If favoriting from a business account', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='business_favorite_traders', to='users.business'),
        ),
        migrations.AddField(
            model_name='p2pfavoritetrader',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_traders', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='p2pmessage',
            name='sender',
            field=models.ForeignKey(blank=True, help_text='DEPRECATED: Use sender_user or sender_business instead', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='p2p_messages_sent_old', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='p2pmessage',
            name='sender_business',
            field=models.ForeignKey(blank=True, help_text='Business sending this message (for business messages)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='p2p_messages_sent', to='users.business'),
        ),
        migrations.AddField(
            model_name='p2pmessage',
            name='sender_user',
            field=models.ForeignKey(blank=True, help_text='User sending this message (for personal messages)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='p2p_messages_sent_as_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='p2poffer',
            name='account',
            field=models.ForeignKey(blank=True, help_text='DEPRECATED: Use offer_user or offer_business instead', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='p2p_offers_old', to='users.account'),
        ),
        migrations.AddField(
            model_name='p2poffer',
            name='offer_business',
            field=models.ForeignKey(blank=True, help_text='Business creating this offer (for business offers)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='p2p_offers', to='users.business'),
        ),
        migrations.AddField(
            model_name='p2poffer',
            name='offer_user',
            field=models.ForeignKey(blank=True, help_text='User creating this offer (for personal offers)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='p2p_offers_as_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='p2poffer',
            name='user',
            field=models.ForeignKey(blank=True, help_text='DEPRECATED: Use offer_user or offer_business instead', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='p2p_offers_old', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='p2ppaymentmethod',
            name='bank',
            field=models.ForeignKey(blank=True, help_text='Reference to Bank model if this is a bank-based payment method', null=True, on_delete=django.db.models.deletion.CASCADE, to='users.bank'),
        ),
        migrations.AddField(
            model_name='p2ppaymentmethod',
            name='country',
            field=models.ForeignKey(blank=True, help_text='Country for non-bank payment methods (e.g., fintech, mobile payments)', null=True, on_delete=django.db.models.deletion.CASCADE, to='users.country'),
        ),
        migrations.AddField(
            model_name='p2poffer',
            name='payment_methods',
            field=models.ManyToManyField(related_name='offers', to='p2p_exchange.p2ppaymentmethod'),
        ),
        migrations.AddField(
            model_name='p2ptrade',
            name='buyer',
            field=models.ForeignKey(blank=True, help_text='DEPRECATED: Use buyer_user or buyer_business instead', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='p2p_purchases_old', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='p2ptrade',
            name='buyer_account',
            field=models.ForeignKey(blank=True, help_text='DEPRECATED: Use buyer_user or buyer_business instead', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='p2p_purchases_old', to='users.account'),
        ),
        migrations.AddField(
            model_name='p2ptrade',
            name='buyer_business',
            field=models.ForeignKey(blank=True, help_text='Business that is buying (for business trades)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='p2p_purchases', to='users.business'),
        ),
        migrations.AddField(
            model_name='p2ptrade',
            name='buyer_user',
            field=models.ForeignKey(blank=True, help_text='User who is buying (for personal trades)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='p2p_purchases_as_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='p2ptrade',
            name='offer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trades', to='p2p_exchange.p2poffer'),
        ),
        migrations.AddField(
            model_name='p2ptrade',
            name='payment_method',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='p2p_exchange.p2ppaymentmethod'),
        ),
        migrations.AddField(
            model_name='p2ptrade',
            name='seller',
            field=models.ForeignKey(blank=True, help_text='DEPRECATED: Use seller_user or seller_business instead', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='p2p_sales_old', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='p2ptrade',
            name='seller_account',
            field=models.ForeignKey(blank=True, help_text='DEPRECATED: Use seller_user or seller_business instead', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='p2p_sales_old', to='users.account'),
        ),
        migrations.AddField(
            model_name='p2ptrade',
            name='seller_business',
            field=models.ForeignKey(blank=True, help_text='Business that is selling (for business trades)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='p2p_sales', to='users.business'),
        ),
        migrations.AddField(
            model_name='p2ptrade',
            name='seller_user',
            field=models.ForeignKey(blank=True, help_text='User who is selling (for personal trades)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='p2p_sales_as_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='p2pmessage',
            name='trade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='p2p_exchange.p2ptrade'),
        ),
        migrations.AddField(
            model_name='p2pescrow',
            name='trade',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='escrow', to='p2p_exchange.p2ptrade'),
        ),
        migrations.AddField(
            model_name='p2pdisputetransaction',
            name='trade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dispute_transactions', to='p2p_exchange.p2ptrade'),
        ),
        migrations.AddField(
            model_name='p2pdisputeevidence',
            name='trade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evidences', to='p2p_exchange.p2ptrade'),
        ),
        migrations.AddField(
            model_name='p2pdispute',
            name='trade',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='dispute_details', to='p2p_exchange.p2ptrade'),
        ),
        migrations.AddField(
            model_name='p2ptradeconfirmation',
            name='confirmer_business',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='p2p_confirmations', to='users.business'),
        ),
        migrations.AddField(
            model_name='p2ptradeconfirmation',
            name='confirmer_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='p2p_confirmations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='p2ptradeconfirmation',
            name='trade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='confirmations', to='p2p_exchange.p2ptrade'),
        ),
        migrations.AddField(
            model_name='p2ptraderating',
            name='ratee_business',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='p2p_ratings_received', to='users.business'),
        ),
        migrations.AddField(
            model_name='p2ptraderating',
            name='ratee_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='p2p_ratings_received', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='p2ptraderating',
            name='rater_business',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='p2p_ratings_given', to='users.business'),
        ),
        migrations.AddField(
            model_name='p2ptraderating',
            name='rater_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='p2p_ratings_given', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='p2ptraderating',
            name='trade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='p2p_exchange.p2ptrade'),
        ),
        migrations.AddField(
            model_name='p2puserstats',
            name='stats_business',
            field=models.OneToOneField(blank=True, help_text='Business these stats belong to (for business account stats)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='p2p_stats', to='users.business'),
        ),
        migrations.AddField(
            model_name='p2puserstats',
            name='stats_user',
            field=models.OneToOneField(blank=True, help_text='User these stats belong to (for personal account stats)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='p2p_stats', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='p2puserstats',
            name='user',
            field=models.OneToOneField(blank=True, help_text='DEPRECATED: Use stats_user or stats_business instead', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='p2p_stats_old', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='premiumupgraderequest',
            name='business',
            field=models.ForeignKey(blank=True, help_text='Request in business account context', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='premium_upgrade_requests', to='users.business'),
        ),
        migrations.AddField(
            model_name='premiumupgraderequest',
            name='reviewed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_premium_requests', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='premiumupgraderequest',
            name='user',
            field=models.ForeignKey(blank=True, help_text='Request in personal account context', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='premium_upgrade_requests', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='p2pfavoritetrader',
            index=models.Index(fields=['user', 'created_at'], name='p2p_favorit_user_id_c1805d_idx'),
        ),
        migrations.AddIndex(
            model_name='p2pfavoritetrader',
            index=models.Index(fields=['favoriter_business', 'created_at'], name='p2p_favorit_favorit_4958eb_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='p2pfavoritetrader',
            unique_together={('user', 'favoriter_business', 'favorite_business'), ('user', 'favoriter_business', 'favorite_user')},
        ),
        migrations.AlterUniqueTogether(
            name='p2ppaymentmethod',
            unique_together={('name', 'country_code')},
        ),
        migrations.AddIndex(
            model_name='p2poffer',
            index=models.Index(fields=['exchange_type', 'token_type', 'status'], name='p2p_exchang_exchang_9a02fd_idx'),
        ),
        migrations.AddIndex(
            model_name='p2poffer',
            index=models.Index(fields=['rate'], name='p2p_exchang_rate_e0d538_idx'),
        ),
        migrations.AddIndex(
            model_name='p2poffer',
            index=models.Index(fields=['created_at'], name='p2p_exchang_created_9b1b99_idx'),
        ),
        migrations.AddIndex(
            model_name='p2poffer',
            index=models.Index(fields=['offer_user', 'status'], name='p2p_exchang_offer_u_19b75d_idx'),
        ),
        migrations.AddIndex(
            model_name='p2poffer',
            index=models.Index(fields=['offer_business', 'status'], name='p2p_exchang_offer_b_1eca15_idx'),
        ),
        migrations.AddIndex(
            model_name='p2ptrade',
            index=models.Index(fields=['buyer', 'status'], name='p2p_exchang_buyer_i_3df4bc_idx'),
        ),
        migrations.AddIndex(
            model_name='p2ptrade',
            index=models.Index(fields=['seller', 'status'], name='p2p_exchang_seller__81ac54_idx'),
        ),
        migrations.AddIndex(
            model_name='p2ptrade',
            index=models.Index(fields=['buyer_user', 'status'], name='p2p_exchang_buyer_u_f5cc77_idx'),
        ),
        migrations.AddIndex(
            model_name='p2ptrade',
            index=models.Index(fields=['buyer_business', 'status'], name='p2p_exchang_buyer_b_68aece_idx'),
        ),
        migrations.AddIndex(
            model_name='p2ptrade',
            index=models.Index(fields=['seller_user', 'status'], name='p2p_exchang_seller__5b1dfb_idx'),
        ),
        migrations.AddIndex(
            model_name='p2ptrade',
            index=models.Index(fields=['seller_business', 'status'], name='p2p_exchang_seller__ed2339_idx'),
        ),
        migrations.AddIndex(
            model_name='p2ptrade',
            index=models.Index(fields=['status', 'created_at'], name='p2p_exchang_status_54b88b_idx'),
        ),
        migrations.AddIndex(
            model_name='p2ptrade',
            index=models.Index(fields=['expires_at'], name='p2p_exchang_expires_88198e_idx'),
        ),
        migrations.AddIndex(
            model_name='p2pmessage',
            index=models.Index(fields=['trade', 'created_at'], name='p2p_exchang_trade_i_05ad51_idx'),
        ),
        migrations.AddIndex(
            model_name='p2pmessage',
            index=models.Index(fields=['sender', 'is_read'], name='p2p_exchang_sender__5999ce_idx'),
        ),
        migrations.AddIndex(
            model_name='p2pmessage',
            index=models.Index(fields=['sender_user', 'is_read'], name='p2p_exchang_sender__707b76_idx'),
        ),
        migrations.AddIndex(
            model_name='p2pmessage',
            index=models.Index(fields=['sender_business', 'is_read'], name='p2p_exchang_sender__bda543_idx'),
        ),
        migrations.AddIndex(
            model_name='p2pdisputetransaction',
            index=models.Index(fields=['dispute', 'status'], name='p2p_dispute_dispute_921c7e_idx'),
        ),
        migrations.AddIndex(
            model_name='p2pdisputetransaction',
            index=models.Index(fields=['transaction_hash'], name='p2p_dispute_transac_0b974a_idx'),
        ),
        migrations.AddIndex(
            model_name='p2pdisputetransaction',
            index=models.Index(fields=['processed_at'], name='p2p_dispute_process_59e6de_idx'),
        ),
        migrations.AddIndex(
            model_name='p2pdisputeevidence',
            index=models.Index(fields=['dispute', 'uploaded_at'], name='p2p_exchang_dispute_f6eb8f_idx'),
        ),
        migrations.AddIndex(
            model_name='p2pdisputeevidence',
            index=models.Index(fields=['trade', 'uploaded_at'], name='p2p_exchang_trade_i_4574bf_idx'),
        ),
        migrations.AddConstraint(
            model_name='p2ptradeconfirmation',
            constraint=models.UniqueConstraint(condition=models.Q(('confirmer_user__isnull', False)), fields=('trade', 'confirmation_type', 'confirmer_user'), name='unique_user_confirmation'),
        ),
        migrations.AddConstraint(
            model_name='p2ptradeconfirmation',
            constraint=models.UniqueConstraint(condition=models.Q(('confirmer_business__isnull', False)), fields=('trade', 'confirmation_type', 'confirmer_business'), name='unique_business_confirmation'),
        ),
        migrations.AddConstraint(
            model_name='p2ptraderating',
            constraint=models.UniqueConstraint(fields=('trade', 'rater_user', 'rater_business'), name='unique_rating_per_rater_per_trade'),
        ),
    ]
