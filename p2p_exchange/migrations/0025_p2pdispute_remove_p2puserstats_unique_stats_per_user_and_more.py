# Generated by Django 4.2.20 on 2025-07-25 03:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('users', '0010_populate_payment_method_for_existing_bankinfo'),
        ('p2p_exchange', '0024_add_unique_constraints_to_stats'),
    ]

    operations = [
        migrations.CreateModel(
            name='P2PDispute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Soft delete timestamp', null=True)),
                ('reason', models.TextField(help_text='Initial reason for dispute')),
                ('status', models.CharField(choices=[('OPEN', 'Open'), ('UNDER_REVIEW', 'Under Review'), ('RESOLVED', 'Resolved'), ('ESCALATED', 'Escalated')], default='OPEN', max_length=20)),
                ('priority', models.IntegerField(default=1, help_text='1=Low, 2=Medium, 3=High')),
                ('evidence_urls', models.JSONField(blank=True, default=list, help_text='List of evidence URLs')),
                ('admin_notes', models.TextField(blank=True, help_text='Internal notes from admin/support')),
                ('resolution_type', models.CharField(blank=True, choices=[('REFUND_BUYER', 'Refund to Buyer'), ('RELEASE_TO_SELLER', 'Release to Seller'), ('PARTIAL_REFUND', 'Partial Refund'), ('CANCELLED', 'Trade Cancelled'), ('NO_ACTION', 'No Action Taken')], max_length=20, null=True)),
                ('resolution_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('opened_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-priority', '-opened_at'],
            },
        ),
        migrations.RemoveConstraint(
            model_name='p2puserstats',
            name='unique_stats_per_user',
        ),
        migrations.RemoveConstraint(
            model_name='p2puserstats',
            name='unique_stats_per_business',
        ),
        migrations.RemoveConstraint(
            model_name='p2puserstats',
            name='unique_stats_per_old_user',
        ),
        migrations.AddField(
            model_name='p2pdispute',
            name='initiator_business',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='disputes_initiated', to='users.business'),
        ),
        migrations.AddField(
            model_name='p2pdispute',
            name='initiator_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='disputes_initiated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='p2pdispute',
            name='resolved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='disputes_resolved', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='p2pdispute',
            name='trade',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='dispute_details', to='p2p_exchange.p2ptrade'),
        ),
        migrations.AddIndex(
            model_name='p2pdispute',
            index=models.Index(fields=['status', 'priority'], name='p2p_exchang_status_6b0ce5_idx'),
        ),
        migrations.AddIndex(
            model_name='p2pdispute',
            index=models.Index(fields=['opened_at'], name='p2p_exchang_opened__8d4787_idx'),
        ),
        migrations.AddIndex(
            model_name='p2pdispute',
            index=models.Index(fields=['resolved_at'], name='p2p_exchang_resolve_f18667_idx'),
        ),
    ]
