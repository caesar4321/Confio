# Generated by Django 4.2.20 on 2025-07-22 01:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0007_add_soft_delete_fields'),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Soft delete timestamp', null=True)),
                ('code', models.CharField(help_text='ISO 3166-1 alpha-2 country code (e.g., VE, CO, AR)', max_length=3, unique=True)),
                ('name', models.CharField(help_text='Country name', max_length=100)),
                ('flag_emoji', models.CharField(blank=True, help_text='Country flag emoji (e.g., ðŸ‡»ðŸ‡ª)', max_length=10, null=True)),
                ('currency_code', models.CharField(help_text='Currency code (e.g., VES, COP, ARS)', max_length=3)),
                ('currency_symbol', models.CharField(help_text='Currency symbol (e.g., Bs., $)', max_length=10)),
                ('requires_identification', models.BooleanField(default=True, help_text='Whether bank transfers require recipient ID number')),
                ('identification_name', models.CharField(default='CÃ©dula', help_text='Local name for ID document (e.g., CÃ©dula, DNI, RUT)', max_length=50)),
                ('identification_format', models.CharField(blank=True, help_text="Expected format for ID (e.g., 'V-12345678', '12345678-9')", max_length=100, null=True)),
                ('account_number_length', models.PositiveIntegerField(default=20, help_text='Typical account number length')),
                ('supports_phone_payments', models.BooleanField(default=False, help_text='Whether country supports phone-based payments')),
                ('is_active', models.BooleanField(default=True, help_text='Whether ConfÃ­o operates in this country')),
                ('display_order', models.PositiveIntegerField(default=1000, help_text='Display order in lists (lower numbers first)')),
            ],
            options={
                'verbose_name_plural': 'Countries',
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Soft delete timestamp', null=True)),
                ('code', models.CharField(help_text='Bank code/identifier', max_length=50)),
                ('name', models.CharField(help_text='Bank name', max_length=100)),
                ('short_name', models.CharField(blank=True, help_text='Short/common name for the bank', max_length=50, null=True)),
                ('supports_checking', models.BooleanField(default=True, help_text='Whether bank supports checking accounts')),
                ('supports_savings', models.BooleanField(default=True, help_text='Whether bank supports savings accounts')),
                ('supports_payroll', models.BooleanField(default=False, help_text='Whether bank supports payroll accounts')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this bank is currently supported')),
                ('display_order', models.PositiveIntegerField(default=1000, help_text='Display order in lists (lower numbers first)')),
                ('country', models.ForeignKey(help_text='Country where this bank operates', on_delete=django.db.models.deletion.CASCADE, related_name='banks', to='users.country')),
            ],
            options={
                'ordering': ['country__display_order', 'display_order', 'name'],
                'unique_together': {('country', 'code')},
            },
        ),
        migrations.CreateModel(
            name='BankInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Soft delete timestamp', null=True)),
                ('account_holder_name', models.CharField(help_text='Full name of the account holder', max_length=200)),
                ('account_number', models.CharField(help_text='Bank account number', max_length=30)),
                ('account_type', models.CharField(choices=[('ahorro', 'Cuenta de Ahorros'), ('corriente', 'Cuenta Corriente'), ('nomina', 'Cuenta NÃ³mina')], default='ahorro', help_text='Type of bank account', max_length=20)),
                ('identification_number', models.CharField(blank=True, help_text='Identification number (required for some countries)', max_length=30, null=True)),
                ('phone_number', models.CharField(blank=True, help_text='Phone number associated with bank account', max_length=15, null=True)),
                ('email', models.EmailField(blank=True, help_text='Email associated with bank account', max_length=254, null=True)),
                ('is_default', models.BooleanField(default=False, help_text='Whether this is the default bank account for this account')),
                ('is_public', models.BooleanField(default=False, help_text='Whether this bank info can be shared with other users')),
                ('is_verified', models.BooleanField(default=False, help_text='Whether this bank account has been verified')),
                ('verified_at', models.DateTimeField(blank=True, help_text='When the bank account was verified', null=True)),
                ('account', models.ForeignKey(help_text='Account that owns this bank information', on_delete=django.db.models.deletion.CASCADE, related_name='bank_accounts', to='users.account')),
                ('bank', models.ForeignKey(help_text='Bank where the account is held', on_delete=django.db.models.deletion.CASCADE, related_name='bank_accounts', to='users.bank')),
                ('country', models.ForeignKey(help_text='Country where the bank account is located', on_delete=django.db.models.deletion.CASCADE, related_name='bank_accounts', to='users.country')),
                ('shared_with_users', models.ManyToManyField(blank=True, help_text='Users who have access to this bank information', related_name='shared_bank_info', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, help_text='Admin user who verified this bank account', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_bank_accounts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bank Information',
                'verbose_name_plural': 'Bank Information',
                'ordering': ['-is_default', '-created_at'],
                'unique_together': {('account', 'bank', 'account_number')},
            },
        ),
    ]
