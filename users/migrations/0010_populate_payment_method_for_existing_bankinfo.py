# Generated by Django 4.2.20

from django.db import migrations

def populate_payment_method_field(apps, schema_editor):
    """Populate payment_method field for existing BankInfo records based on their bank"""
    BankInfo = apps.get_model('users', 'BankInfo')
    P2PPaymentMethod = apps.get_model('p2p_exchange', 'P2PPaymentMethod')
    
    # Get all BankInfo records that have a bank but no payment_method
    bank_infos = BankInfo.objects.filter(bank__isnull=False, payment_method__isnull=True)
    
    for bank_info in bank_infos:
        # Try to find a corresponding P2PPaymentMethod for this bank
        try:
            payment_method = P2PPaymentMethod.objects.get(
                bank=bank_info.bank,
                provider_type='BANK',
                is_active=True
            )
            bank_info.payment_method = payment_method
            bank_info.save()
            print(f"Updated BankInfo {bank_info.id} with payment method {payment_method.display_name}")
        except P2PPaymentMethod.DoesNotExist:
            print(f"Warning: No active P2PPaymentMethod found for bank {bank_info.bank.name} (ID: {bank_info.bank.id})")
        except P2PPaymentMethod.MultipleObjectsReturned:
            # If multiple payment methods exist for the same bank, use the first one
            payment_method = P2PPaymentMethod.objects.filter(
                bank=bank_info.bank,
                provider_type='BANK',
                is_active=True
            ).first()
            if payment_method:
                bank_info.payment_method = payment_method
                bank_info.save()
                print(f"Updated BankInfo {bank_info.id} with payment method {payment_method.display_name} (multiple found, using first)")

def reverse_populate_payment_method_field(apps, schema_editor):
    """Reverse migration - clear payment_method field"""
    BankInfo = apps.get_model('users', 'BankInfo')
    BankInfo.objects.filter(payment_method__isnull=False).update(payment_method=None)

class Migration(migrations.Migration):

    dependencies = [
        ('users', '0009_add_payment_method_fields'),
        ('p2p_exchange', '0012_add_payment_method_fields'),
    ]

    operations = [
        migrations.RunPython(populate_payment_method_field, reverse_populate_payment_method_field),
    ]